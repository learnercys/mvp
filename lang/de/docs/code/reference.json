{
    "Reference": "Verweise",
    "Now that you've stepped through the developer guide like a champ, we have some reference materials for you. This would be a great place to bookmark and refer back to when you have questions about elementary development.": "Da du es jetzt wie ein Meister durch den Entwickler-Guide geschafft hast, geben wir dir jetzt Verweis-Material. Das wäre ein guter Ort zum markieren, um bei Fragen über die elementary-Entwicklung darauf zurückzugreifen.",
    "Code Style": "Programmierstil",
    "The purpose of this guide is to provide clean and accurate instructions on\nwriting good code across all elementary projects. This guideline is to be\nfollowed on every file, in order to keep our code consistent and readable. We\nare also inheriting some of the GNOME's Vala guidelines to keep our code\nconsistent with other Vala programs.": "Der Zweck dieses Leitfadens ist es, klare und genaue Anweisungen zur Verfügung zu stellen, um guten Code für alle Projekte von elementary zu schreiben. Dieser Leitfaden muss bei jeder Datei befolgt werden, damit unser Code einheitlich und lesbar bleibt. Wir übernehmen auch einige von GNOME Valas Richtlinien, um unseren Code einheitlich mit anderen Vala Programmen zu halten.",
    "If the guidelines here proposed are followed, newcomers to elementary\ndevelopment will be more easily able to join the development and\nunderstand code. Besides, it'll make it easier for all developers to work on\napplications that they don't usually work on, because the code will be\nconsistent. Finally, as Guido Van Rossum said - &quot;Code is much more often read\nthan written&quot;, so having nicely written code is crucial.": "Wenn die hier aufgestellten Richtlinien befolgt werden, so werden es Neulinge bei elementary einfacher haben, sich an der Entwicklung zu beteiligen und den Code zu verstehen. Darüber hinaus wird es allen Entwicklern einfacher gemacht, an Anwendungen zu arbeiten, mit deren Code sie sich gewöhnlich nicht beschäftigen, da der Code einheitlich sein wird. Zu guter Letzt, wie Guido Van Rossum sagte - \"Code wird weit häufiger gelesen als geschrieben\", sodass gut geschriebener Code von entscheidender Bedeutung ist.",
    "Whitespace": "Leerzeichen",
    "There is no trailing whitespace at the end of a line, whether it's empty or\nnot. There is also no empty line after declaring a function:": "Verwende keine Leerzeichen am Ende einer Zeile, egal ob sie leer ist oder nicht. Füge auch keine leere Zeile nach der Deklaration einer Funktion ein:",
    "White space comes before opening parentheses:": "Vor geöffnete Klammern folgt ein Leerzeichen:",
    "Whitespace goes in all maths-related code, between numbers and operators.": "Leerzeichen gehören bei jeglichen Mathematik bezogen Code, zwischen Ziffern und Rechenzeichen.",
    "Indentation": "Einrückung",
    "Vala code is indented using 4 spaces for consistency and readability.": "Vala Code wird mit 4 Leerzeichen intendiert um Einheitlichkeit und Lesbarkeit bei zu behalten.",
    "In classes, functions, loops and general flow control, the first parentheses\nis on the end of the first line (&quot;One True Brace Style&quot;), followed by the\nindented code, and a line closing the function with a curly bracket:": "In classes, functions, loops and general flow control, the first parentheses\nis on the end of the first line (\"One True Brace Style\"), followed by the\nindented code, and a line closing the function with a curly bracket:",
    "On conditionals and loops, always use braces even if there's only one line of code:": "Bei Bedingungscode und Schleifen sollten immer Klammern benutzt werden, auch wenn dort nur eine Zeile Quelltext steht:",
    "Cuddled else and else if:": "Cuddled else and else if:",
    "If you are checking the same variable more than twice, use switch/case instead of multiple else/if:": "Falls Sie die gleiche Variable mehr als zwei mal prüfen, benutzen Sie switch/case anstatt mehreren else/if:",
    "Classes and files": "Klassen und Dateien",
    "Only having one class per file is recommended.": "Es wird empfohlen nur eine Klasse pro Datei zu haben.",
    "All files have the same name of the class in them.": "Alle Dateien beinhalten denselben Klassennamen.",
    "Separate code into classes for easier extensibility.": "Teile den Code in Klassen ein, für eine leichtere Erweiterung.",
    "Comments": "Kommentare",
    "Comments are either on the same line as the code or in a special line.": "Kommentare sind entweder in der selben Zeile wie der Code oder in einer eigenen Zeile.",
    "Comments are indented alongside the code, and obvious comments do more harm\nthan good.": "Kommentare werden neben dem Code eingerückt, und offensichtliche Kommentare bringen mehr Schaden als Nutzen.",
    "Variable names, class names, function names": "Variablennamen, Klassennamen, Funktionsnamen",
    "Also worth referring that there should be no Hungarian notation, and no mix of\nany kinds of notations.": "Also worth referring that there should be no Hungarian notation, and no mix of\nany kinds of notations.",
    "Casting": "Casting",
    "Avoid using <code>as</code> keyword when casting as it might give <code>null</code> as result, which could be easily forgotten to check.": "Avoid using <code>as</code> keyword when casting as it might give <code>null</code> as result, which could be easily forgotten to check.",
    "Vala namespaces": "Vala namespaces",
    "Referring to GLib is not necessary. If you want to print something:": "Referring to GLib is not necessary. If you want to print something:",
    "Opt for the second one, it's much cleaner.": "Entscheide dich für die zweite Option, sie ist viel sauberer.",
    "Columns per line": "Spalten pro Zeile",
    "Ideally, lines should have no more than 80 characters per line, because this\nis the default terminal size. However, as an exception, more characters could\nbe added, because most people have wide-enough monitors nowadays. The hard\nlimit is 120 characters.": "Idealerweise sollten Zeilen nicht mehr als 80 Zeichen beinhalten, da dies die voreingestellte Konsolengröße ist. In Ausnahmefällen können jedoch mehr Zeichen hinzugefügt werden, weil die meisten Leute heutzutage Monitore haben, die breit genug sind. Die Obergrenze liegt bei 120 Zeichen.",
    "GPL Header": "GPL Kopfzeile",
    "Reporting Bugs": "Bugs melden",
    "One of the big advantages of being an openly developed project is being able to take part in public bug tracking. However, if you're new to working with public bug tracking, it can be difficult to understand how to report bugs The Right Way™. So let's find out how:": "Ein großer Vorteil eines offen entwickelten Projekts ist die Möglichkeit, sich an öffentlicher Fehlersuche zu beteiligen. Wenn du allerdings ein Neuling im Bug Tracking bist, könntest du Anfangsschwierigkeiten haben, Fehler korrekt zu melden. Lass uns also rausfinden, wie das geht:",
    "In order to file reports, you must be signed up as a member of Launchpad. If you've been through our <a href=\"/docs/code/getting-started#the-basic-setup\">development guide</a>, you already have this covered.": "Um Fehler zu melden, musst du bei Launchpad registriert sein. Wenn du unseren <a href=\"/docs/code/getting-started#the-basic-setup\">Entwicklungsleitfaden</a> gelesen hast, hast du das bereits gelernt.",
    "Find the &quot;Report a Bug&quot; page for the app in question. Often times you can right-click the app in the dock, select &quot;About&quot;, and then select &quot;Report a Problem&quot;. Otherwise, you can search for the app on Launchpad, select the &quot;Bugs&quot; tab, and then &quot;Report a Bug&quot; on the right side of the page.": "Finde die Seite \"Fehler melden\" für die fragliche Anwendung. Häufig kann du einen Rechtsklick auf eine Anwendung ausführen, \"Über\" und dann \"Ein Problem melden\" wählen. Ansonsten kannst du die Anwendung auf Launchpad suchen, dort den Reiter \"Fehler\" auswählen und dann \"Einen Fehler melden\" auf der rechten Seite auswählen.",
    "When filing a new report, launchpad will automatically check for duplicates. However, it's still a good idea to search the bug list to make sure your report hasn't been filed already. If your report has already been filed by someone else, you can mark the report as affecting you using the link on the top left of the report's page. Only comment on the report if you can provide additional useful information that may help track down the source of the issue. Do not comment things like, &quot;I have this problem too&quot; or &quot;This is a really important issue&quot;.": "Beim Berichten eines Fehlers wird Launchpad automatisch auf Duplikate prüfen. Dennoch ist es eine gute Idee, die Fehlerliste zu durchsuchen, um sicherzugehen, dass dein Bericht nicht bereits eingereicht wurde. Falls dein Bericht schon von jemand anderem eingereicht wurde, kannst du über den Link oben links auf der Berichtseite eine Markierung setzten, dass das gemeldete Problem auch dich betrifft. Kommentiere den Bericht nur, wenn du zusätzliche nützliche Informationen beisteuern kannst, die zum Auffinden der Fehlerhilfe beitragen könnten. Poste keine Kommentare wie, \"Ich habe dieses Problem auch\" oder \"Dieses Problem ist wirklich wichtig\".",
    "If your report has not already been filed by someone else and you've reached the &quot;Report a Bug&quot; page, type in a summary and description of the issue and select &quot;Submit&quot;. Keep in mind the following information while filing your report:": "Sollte dein Bericht nicht bereits von jemand anderem eingereicht worden sein, kannst du auf der Seite \"Einen Fehler melden\" eine Zusammenfassung und Beschreibung des Problems eingeben und auf \"Senden\" klicken. Achte auf die folgende Information für das Einreichen eines Berichts:",
    "Be Specific In The Summary": "Sei konkret in der Zusammenfassung",
    "This will be the title of the issue in the bug tracker. It's very important to be specific because it makes it much easier for a developer or bug manager to search the issue list and helps avoid duplicate reports. A summary such as &quot;App Crashes&quot; is not good and vague requests like &quot;Increase Performance&quot; are not helpful. A good summary is something like &quot;Notification is not sent when process finishes&quot;.": "Dies wird der Titel des Fehlers im Bug Tracker. Deswegen ist es sehr wichtig, das der Titel genau ist. Dies macht es für Entwickler oder Fehler Manager leichter in der Fehlerliste zu suchen und hilft außerdem doppelte Fehlermeldungen zu vermeiden. Ein Titel wie \"Anwendungs Absturz\" und ungenaue Aussagen wie \"steigende Leistung\" sind nicht hilfreich. Ein guter Titel wäre \"Meldung wird nicht gesendet wenn Prozess beendet wird\".",
    "Avoid Subjective or Ambiguous Adjectives": "Vermeide subjektive oder doppeldeutige Adjektive",
    "This may sound like a repeat of the first heading, but it's important when you want someone to confirm your report. Don't say that something is &quot;jarring&quot; or &quot;unintuitive&quot;. Instead describe what happened and contrast it with what you expected to happen. &quot;The panel suddenly appeared instead of being animated in,&quot; describes the problem in a way that is actionable and objective.": "Das mag sich wie eine Wiederholung der ersten Überschrift anhören, aber es ist wichtig, wenn du willst, dass jemand deinen Bericht bestätigt. Sage nicht, dass etwas \"holprig\" oder \"unintuitiv\" ist. Beschreibe stattdessen, was passiert ist und vergleiche es mit dem, was du erwartet hast. \"Das Panel ist plötzlich aufgetaucht, statt animiert zu werden,\" beschreibt das Problem auf eine nachvollziehbare und objektive Art.",
    "Be Concise, But Explain The Issue": "Sei knapp und präzise, aber erkläre das Problem",
    "First of all, it's important to mention that bug reports should be written in English and you should, if possible, watch out for your language and grammar.": "Zuallererst ist es wichtig, dass Fehlerberichte auf Englisch verfasst werden sollen und dass du, wenn möglich, auf deine Sprache und Grammatik achten solltest.",
    "The most important thing for a report is that the developer must be able to reproduce the issue. If necessary, include exact numbered steps to reproduce the issue. Include relevant information like your OS version, any modifications you've made to the system (like changing your window manager or kernel), or the version numbers of relevant libraries like Gtk or WebKit. If you're reporting a crash, make sure to <a href=\"https://wiki.debian.org/HowToGetABacktrace\">include a backtrace</a>.": "The most important thing for a report is that the developer must be able to reproduce the issue. If necessary, include exact numbered steps to reproduce the issue. Include relevant information like your OS version, any modifications you've made to the system (like changing your window manager or kernel), or the version numbers of relevant libraries like Gtk or WebKit. If you're reporting a crash, make sure to <a href=\"https://wiki.debian.org/HowToGetABacktrace\">include a backtrace</a>.",
    "Be Prepared To Provide More Information": "Bereite dich darauf vor mehr Informationen bereit zu stellen",
    "If your report does not contain enough information for the developer to reproduce the issue, it may be marked as &quot;Incomplete&quot;. Oftentimes, a developer will make a comment requesting additional specific information. If you do not provide that information, your report will eventually expire.": "If your report does not contain enough information for the developer to reproduce the issue, it may be marked as \"Incomplete\". Oftentimes, a developer will make a comment requesting additional specific information. If you do not provide that information, your report will eventually expire.",
    "If you've reported your issue against the wrong app, a developer may mark it as &quot;Invalid&quot;. If the developer knows which app you meant to report against, they may re-assign the issue. However, if they do not you must find the correct app and re-assign the report yourself.": "If you've reported your issue against the wrong app, a developer may mark it as \"Invalid\". If the developer knows which app you meant to report against, they may re-assign the issue. However, if they do not you must find the correct app and re-assign the report yourself.",
    "If you're reporting a &quot;Wishlist&quot; issue, like a feature request, a developer may mark your bug as &quot;Opinion&quot; or &quot;Won't Fix&quot;. Developers are often open to discussion about these kinds of issues, but please do not harass a developer for marking your report this way.": "If you're reporting a \"Wishlist\" issue, like a feature request, a developer may mark your bug as \"Opinion\" or \"Won't Fix\". Developers are often open to discussion about these kinds of issues, but please do not harass a developer for marking your report this way.",
    "You Can Get a Bit of Help": "Sie können ein bisschen Hilfe bekommen",
    "If you're not sure about anything above, you are always welcome to our development IRC channel: #elementary-dev on irc.freenode.net. We might be able to help you track down the actual project where you should report the issue, or perhaps even aid you with any English language issue you might come across. Most developers want to help you make good bug reports.": "If you're not sure about anything above, you are always welcome to our development IRC channel: #elementary-dev on irc.freenode.net. We might be able to help you track down the actual project where you should report the issue, or perhaps even aid you with any English language issue you might come across. Most developers want to help you make good bug reports.",
    "Don't Confirm Reports for Other People's Apps": "Don't Confirm Reports for Other People's Apps",
    "If a report affects you, mark it using the link. Do not confrim your own reports. Even if you are 100% sure that you are right, just don't do it. It's not good bug tracker etiquette. A bug manager or developer for the app will confirm the report when they are able to review it.": "If a report affects you, mark it using the link. Do not confrim your own reports. Even if you are 100% sure that you are right, just don't do it. It's not good bug tracker etiquette. A bug manager or developer for the app will confirm the report when they are able to review it.",
    "Don't Make &quot;Me Too&quot; Comments": "Schreibe keine \"Ich auch\" Kommentare",
    "We mentioned this earlier, but it's worth mentioning again. Do not make comments that simply say &quot;This issue affects me as well&quot;. This clutters up the tracker. Only comment if you are providing additional information that helps find the source of the issue. If you only want to let a developer know that you are affected, use the green link that says, &quot;Does this bug affect you?&quot; under the report's title.": "We mentioned this earlier, but it's worth mentioning again. Do not make comments that simply say \"This issue affects me as well\". This clutters up the tracker. Only comment if you are providing additional information that helps find the source of the issue. If you only want to let a developer know that you are affected, use the green link that says, \"Does this bug affect you?\" under the report's title.",
    "Proposing Design Changes": "Änderungen am Design vorschlagen",
    "elementary has always been known for its strong focus on great design, but if you’re an up and coming designer you might not know how to get developers to pay attention to you. This reference guide is about how to effectively propose a design change in a way that makes it more likely for your design to become implemented.": "elementary has always been known for its strong focus on great design, but if you’re an up and coming designer you might not know how to get developers to pay attention to you. This reference guide is about how to effectively propose a design change in a way that makes it more likely for your design to become implemented.",
    "Don't Make Demands": "Stell keine Forderungen",
    "Let’s say you spent the last few hours re-designing the Search Engine Manager dialog in Midori and you want to bring this work to the attention of Midori’s developers. You could file a bug report something like “Search engine popup sucks” and paste your mockup and be done. But that approach isn’t going to win you any friends and your report will probably be marked “opinion” or “invalid”. Instead, we should consider the amount of work it will take to implement the new design and try to present it in a way that gets developers excited about the overall vision without demanding 1,000 lines of code in one shot.": "Let’s say you spent the last few hours re-designing the Search Engine Manager dialog in Midori and you want to bring this work to the attention of Midori’s developers. You could file a bug report something like “Search engine popup sucks” and paste your mockup and be done. But that approach isn’t going to win you any friends and your report will probably be marked “opinion” or “invalid”. Instead, we should consider the amount of work it will take to implement the new design and try to present it in a way that gets developers excited about the overall vision without demanding 1,000 lines of code in one shot.",
    "Use Blueprints": "Benutze Entwürfe",
    "Firstly, we want to present the overall vision of our grand new design. So we should file a new blueprint (in this example, we’d file it <a href=\"http://blueprints.launchpad.net/midori\">here</a>). Name it something explicit and try to avoid titles that marginalize developer’s existing work. Something like “search-engine-manager-redesign” works just fine. In this blueprint we want to describe our motivations for the redesign. What are the problems with the current design and what does our new design aim to solve? Common reasons for a redesign can include minimizing window chrome, taking advantage of new toolkit elements, making the UI more consistent with other apps, etc. This is also a good place to link to that mockup we were talking about earlier. If your design is really involved, you can even link to an external specification (Google Docs work great for getting feedback) where you have a chance to really get into the nitty gritty of your idea.": "Firstly, we want to present the overall vision of our grand new design. So we should file a new blueprint (in this example, we’d file it <a href=\"http://blueprints.launchpad.net/midori\">here</a>). Name it something explicit and try to avoid titles that marginalize developer’s existing work. Something like “search-engine-manager-redesign” works just fine. In this blueprint we want to describe our motivations for the redesign. What are the problems with the current design and what does our new design aim to solve? Common reasons for a redesign can include minimizing window chrome, taking advantage of new toolkit elements, making the UI more consistent with other apps, etc. This is also a good place to link to that mockup we were talking about earlier. If your design is really involved, you can even link to an external specification (Google Docs work great for getting feedback) where you have a chance to really get into the nitty gritty of your idea.",
    "Create Concise Work Items": "Create Concise Work Items",
    "Now that you’ve laid out the motivations for your design and explained the overall vision, you should break it up into small, actionable work items (also called bug reports). To continue our example, I would have reports like “Change Search Engine Manager Dialog to Popover”, “Re-order Search Engines with Drag and Drop”, “Open Search Engine Manager by clicking Search icon in URL Bar”, “Show edit and remove buttons next to engine in Search Engine Manager”, etc etc. Each bug report should describe just one small change. We do this for several reasons:": "Now that you’ve laid out the motivations for your design and explained the overall vision, you should break it up into small, actionable work items (also called bug reports). To continue our example, I would have reports like “Change Search Engine Manager Dialog to Popover”, “Re-order Search Engines with Drag and Drop”, “Open Search Engine Manager by clicking Search icon in URL Bar”, “Show edit and remove buttons next to engine in Search Engine Manager”, etc etc. Each bug report should describe just one small change. We do this for several reasons:",
    "It allows developers to deny one request without denying all of them. Face it: your design isn’t perfect and it’s very possible that a developer isn’t going to like part of it. By breaking up your design into little pieces, it allows a developer to incorporate the changes they like and ignore the ones they don’t.": "It allows developers to deny one request without denying all of them. Face it: your design isn’t perfect and it’s very possible that a developer isn’t going to like part of it. By breaking up your design into little pieces, it allows a developer to incorporate the changes they like and ignore the ones they don’t.",
    "It makes your design less intimidating. A big redesign means lots of lines of code. If your changes look like too much of a hassle, you’re going to have a hard time getting a developer to work on them. But if you present small changes that can be incorporated a bit at a time, there’s a bigger chance that your whole design will eventually be implemented.": "It makes your design less intimidating. A big redesign means lots of lines of code. If your changes look like too much of a hassle, you’re going to have a hard time getting a developer to work on them. But if you present small changes that can be incorporated a bit at a time, there’s a bigger chance that your whole design will eventually be implemented.",
    "It allows developers to track their progress. Once again, big designs take time to implement. Even if a developer wants to implement the whole thing right away, they might not be able to. Giving them a way to “check off” pieces as they go makes it more likely that a part of your design won’t be forgotten about when it’s translated into code.": "It allows developers to track their progress. Once again, big designs take time to implement. Even if a developer wants to implement the whole thing right away, they might not be able to. Giving them a way to “check off” pieces as they go makes it more likely that a part of your design won’t be forgotten about when it’s translated into code.",
    "File Compelling Reports": "File Compelling Reports",
    "Don’t forget to make your reports compelling. It’s up to you to sell the merits of each change. Cite the HIG, prior-art, user complaints, articles by other designers, and present your changes in a logical, non-opinionated, and concise manner. It also doesn’t hurt to speak in developer terms. Brush up on the names of widgets in Gtk and Granite, get familiar with available libraries like Zeitgeist and Unity, and don’t forget about system components like PulseAudio or Contractor. Also, whatever you do, don’t be presumptuous and confirm your own bug reports. You wouldn’t ask a friend for a favor and then answer yourself for them, so don’t do it here either. See <a href=\"#reporting-bugs\">the above section</a> for a refresher on filing good bug reports.": "Don’t forget to make your reports compelling. It’s up to you to sell the merits of each change. Cite the HIG, prior-art, user complaints, articles by other designers, and present your changes in a logical, non-opinionated, and concise manner. It also doesn’t hurt to speak in developer terms. Brush up on the names of widgets in Gtk and Granite, get familiar with available libraries like Zeitgeist and Unity, and don’t forget about system components like PulseAudio or Contractor. Also, whatever you do, don’t be presumptuous and confirm your own bug reports. You wouldn’t ask a friend for a favor and then answer yourself for them, so don’t do it here either. See <a href=\"#reporting-bugs\">the above section</a> for a refresher on filing good bug reports.",
    "Be Prepared to Iterate": "Be Prepared to Iterate",
    "Don’t be upset if a developer plainly states that they don’t want to implement your idea. Remember that they have plans too. You might have to go back to the drawing board a bit. Listen to their feedback. Your design might be a little over-engineered, it might conflict with other designs being worked on, or maybe it’s just in conflict with the goals and scope of the app. Remember that you’re in the position of requesting someone to devote their time to something. You’re asking for a favor. Don’t be afraid to argue a position within polite reason, but remember to stay humble.": "Don’t be upset if a developer plainly states that they don’t want to implement your idea. Remember that they have plans too. You might have to go back to the drawing board a bit. Listen to their feedback. Your design might be a little over-engineered, it might conflict with other designs being worked on, or maybe it’s just in conflict with the goals and scope of the app. Remember that you’re in the position of requesting someone to devote their time to something. You’re asking for a favor. Don’t be afraid to argue a position within polite reason, but remember to stay humble."
}