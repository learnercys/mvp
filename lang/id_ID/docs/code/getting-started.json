{
    "Getting Started": "Memulai",
    "Welcome to the elementary Developer Guide! This book was created to teach you all about creating and distributing apps for elementary OS. The introduction will make sure that you have all the tools for the job and a solid understanding of what this book is about. Some of you may feel confident enough to jump straight into coding. If that's the case, you might want to skip ahead and start writing your first app.": "Selamat datang di Panduan Pengembang elementary! Buku panduan ini dibuat untuk mengajarkan anda semua hal mengenai penciptaan dan pendistribusian aplikasi untuk OS elementary. Pengantar ini akan memastikan bahwa Anda memiliki semua perlengkapan untuk pekerjaan ini serta memahami tujuan panduan ini. Beberapa dari Anda mungkin merasa cukup percaya diri untuk langsung menulis kode. Kalau begitu, Anda bisa melewatkan bagian ini dan mulai menulis aplikasi pertama Anda.",
    "However, we strongly recommend to at least skim through this preparation step. Having the right setup is going to help you reach your goals faster, and having a solid foundation is going to help you throughout the rest of this book.": "Namun, kami sangat merekomendasikan untuk paling tidak mengikuti langkah persiapan ini. Memiliki tataan yang tepat akan membantu Anda meraih tujuan anda lebih cepat, dan memiliki pondasi yang kuat akan membantu Anda di seluruh panduan ini.",
    "What We Will And Won't Cover": "Apa yang Akan dan Tidak Akan Kami Ulas",
    "We're going to assume that you have absolutely no experience in writing apps for elementary. But we will assume some basic programming knowledge, and hopefully a little experience in Vala or at least similarly syntaxed languages. If you're not familiar with Vala, we highly encourage you to brush up on it before coming here.": "Kami akan berasumsi bahwa Anda sama sekali tidak memiliki pengalaman dalam menulis aplikasi untuk elementary. Tetapi kami akan berasumsi Anda memiliki pengetahuan dasar pemrograman dan semoga sedikit pengetahuan tentang Vala, atau paling tidak bahasa pemrograman dengan sintaksis yang serupa. Jika Anda tidak akrab dengan Vala, kami sangat mendorong Anda untuk mempelajarinya terlebih dahulu sebelum melanjutkan.",
    "We’re also not covering design too much in this guide; that’s what the <a href=\"/docs/human-interface-guidelines\">Human Interface Guidelines</a> (HIG) are for, and you’re highly encouraged to take a look there before beginning your app. We're going to assume you have a basic knowledge of (or at least a quick link to) the HIG and focus on coding. However, elementary is all about great design and stellar consistency. It’s important you grasp these concepts before moving on.": "Kami juga tidak akan mengulas desain terlalu banyak dalam panduan ini; ada <a href=\"/docs/human-interface-guidelines\">Pedoman Antarmuka Manusiawi</a> (PAM) untuk hal tersebut, dan Anda kami dorong untuk melihatnya sebelum memulai aplikasi Anda. Kami akan berasumsi bahwa Anda memiliki pengetahuan dasar (atau paling tidak pembacaan cepat) tentang PAM dan fokus pada pengkodean. Bagaimanapun juga, elementary adalah semua tentang konsistensi desain yang indah dan luar biasa. Sangat penting bagi Anda untuk meresapi konsep ini sebelum melanjutkan.",
    "In this book, we're going to talk about building apps using GTK+, Granite, and other tech available in elementary, setting up a build system, hosting your code for collaborative development, working with translations, a few other bits and pieces, and finally packaging and distributing your new app.": "Dalam buku panduan ini, kami akan berbicara tentang membangun aplikasi menggunakan GTK+, Granite, dan teknologi lainnya yang tersedia di elementary, penataan sistem pembangun, hosting kode Anda untuk pengembangan kolaboratif, bekerja dengan terjemahan, beberapa hal kecil lainnya, dan terakhir pengepakan dan pendistribusian aplikasi baru Anda.",
    "The Basic Setup": "Penataan Dasar",
    "Before we even think about writing code, you'll need a certain basic setup. This chapter will walk you through the process of getting set up. We will cover the following topics:": "Sebelum kita mulai menulis kode, Anda perlu mempersiapkan beberapa penataan dasar. Bagian ini akan memandu Anda mempersiapkannya. Kami akan mengulas hal-hal berikut:",
    "Creating an account in launchpad.net and importing an SSH key in Launchpad": "Membuat akun di launchpad.net dan mengimpor kunci SSH di Launchpad",
    "Setting up the Bazaar revision control system": "Mengatur penataan sistem kontrol revisi Bazaar",
    "Getting and using the elementary developer &quot;SDK&quot;": "Mendapatkan dan menggunakan \"SDK\" pengembang elementary",
    "We’re going to assume that you’re working from a clean installation of elementary OS Freya or later. This is important as the instructions you’re given may reference apps that are not present (or even available) in other Linux based operating systems like Ubuntu. It is possible to apply the principles of this guide to Ubuntu development, but it may be more difficult to follow along.": "Kami beranggapan anda memulai dari instalasi baru elementary OS Freya atau setelahnya. Ini penting karena instruksi yang diberikan mungkin mengenai aplikasi yang tidak ada (atau tidak tersedia) dalam distro Linux lain seperti Ubuntu. Dimungkinkan juga menjalankan prinsip dalam panduan ini pada pengembangan Ubuntu, tetapi mungkin akan sulit mengikutinya.",
    "Launchpad": "Launchpad",
    "Launchpad is a free online service provided by Canonical, the same people who brought you Ubuntu. It is used as a platform for hosting code, tracking milestones, tracking bugs, proposing designs, making translations, and more. Launchpad is a powerful resource, especially if you are a developer working with others. We're going to be using it for its various features throughout this book, so it's a good idea for you to sign up for an account. If you already have an account, feel free to move on to the next section.": "Launchpad adalah layanan daring gratis yang disediakan oleh Canonical, perusahaan yang mengembangkan Ubuntu. Launchpad digunakan sebagai platform untuk mengelola kode, memantau perkembangan, melacak kutu, merancang desain, melakukan penerjemahan, dan banyak lagi. Launchpad adalah tempat yang luar biasa, terutama jika Anda adalah seorang pengembang yang bekerja dengan pengembang lain. Di dalam panduan ini kita akan memanfaatkan berbagai fiturnya, jadi sebaiknya anda membuat akun terlebih dahulu. Jika anda sudah punya akun, silakan lanjutkan ke bagian berikutnya.",
    "To set up a Launchpad account:": "Untuk membuat akun Launchpad:",
    "Go to <a href=\"https://launchpad.net\">Launchpad.net</a>. Click on <strong>Log in/Register</strong> in the top right corner of the page.": "Buka <a href=\"https://launchpad.net\">Launchpad.net</a>. Klik <strong>Log in/Register</strong> di pojok kanan atas halaman.",
    "Select <strong>I am a new Ubuntu One user</strong> on the left side.": "Pilih <strong>Saya pengguna Ubuntu One baru</strong> di sisi kiri.",
    "Enter your information and click <strong>Create account</strong>.": "Masukkan informasi Anda lalu klik <strong>Buat akun</strong>.",
    "After you have verified your email your Launchpad account is ready, so let's move on to the next section. Remember, we're not going to go over all the little details in this book. We'll come back to Launchpad a few times later on to use specific features, but if you really want to learn everything there is to know about the website you should read their user guide. Onward!": "Setelah Anda verifikasi surel Anda, akun Launchpad Anda sudah siap, mari lanjutkan ke bagian berikutnya. Ingat, kami tidak akan mengulas semua hal secara terperinci di dalam panduan ini. Kita akan kembali ke Launchpad nanti untuk menggunakan fitur spesifiknya, tetapi jika Anda benar-benar ingin mempelajari semua tentang Launchpad, bacalah panduan penggunanya. Ayo lanjut!",
    "Bazaar": "Bazaar",
    "elementary projects are hosted on Launchpad. To interact with the code on Launchpad, we use a distributed <a href=\"http://en.wikipedia.org/wiki/Revision_control\">revision control system</a> called Bazaar. This allows multiple developers to collaboratively develop and maintain the code while keeping track of each revision along the way.": "proyek elementary dikelola di Launchpad. Untuk berinteraksi dengan kode di Launchpad, kami menggunakan <a href=\"http://en.wikipedia.org/wiki/Revision_control\">sistem pengontrol revisi</a> terdistribusi bernama Bazaar. Ini memungkinkan banyak pengembang bersama-sama secara kolaboratif mengembangkan dan memelihara sambil memantau setiap perubahan seiring perkembangannya.",
    "If you're ready, let's get you set up to use Bazaar:": "Jika Anda sudah siap, mari kita mulai penataan untuk menggunakan Bazaar:",
    "Open the Terminal. You'll be interacting with Bazaar through a simple terminal-based program called bzr.": "Buka Terminal. Anda akan berinteraksi dengan Bazaar melalui sebuah program sederhana berbasis terminal bernama bzr.",
    "You'll need to install bzr. Simply type the following into the Terminal:": "Anda perlu memasang bzr. Ketikkan perintah berikut di Terminal:",
    "To authenticate and transfer code securely, you’ll need to generate an <a href=\"http://en.wikipedia.org/wiki/Secure_Shell\">SSH</a> key pair (a kind of fingerprint for your computer) and import the public key in Launchpad. Type the following in terminal:": "Untuk mengotentikasi dan mentransfer kode dengan aman, Anda perlu membuat pasangan kunci <a href=\"http://en.wikipedia.org/wiki/Secure_Shell\">SSH</a> (sejenis sidik jari untuk komputer Anda) lalu mengimpor kunci publik di Launchpad. Ketik perintah berikut di terminal:",
    "When prompted, press Enter to accept the default file name for your key.": "Ketika diminta, tekan Enter untuk menerima nama berkas baku sebagai nama kunci Anda.",
    "Next, enter a password to protect your SSH key. You’ll be asked to enter it again, just to make sure you didn’t make any typos. You'll need to enter this password any time you try to push code to launchpad so don't forget it! Optionally, you can just press enter and use no password, but this is obviously less secure.": "Berikutnya, masukkan sandi untuk melindungi kunci SSH Anda. Anda akan diminta untuk memasukkannya lagi, hanya untuk memastikan Anda tidak melakukan kesalahan pengetikan. Jangan lupakan sandi tersebut, karena Anda akan diminta setiap kali Anda mencoba mendorong kode ke Launchpad. Sebetulnya, Anda bisa saja langsung menekan Enter dan tidak menggunakan sandi, tetapi tentu saja tidak aman.",
    "Now, we're going to tell Launchpad about your SSH key. Open your SSH key with the following command, then copy the text from the file that opens in Scratch:": "Sekarang, kita akan memberitahu Launchpad tentang kunci SSH Anda. Buka kunci SSH Anda dengan perintah di bawah ini, lalu salin teks dari berkas yang terbuka di Scratch:",
    "Visit <a href=\"https://launchpad.net/people/+me/+editsshkeys\">your SSH keys page</a>. Paste the text in the textbox and click <strong>Import public key</strong>.": "Kunjungi <a href=\"https://launchpad.net/people/+me/+editsshkeys\">laman kunci SSH Anda</a>. Tempel teks di dalam kotak yang tersedia lalu klik <strong>Import public key</strong>.",
    "Now you can connect bzr to your Launchpad account. You'll need your launchpad id, which you can look up at <a href=\"https://launchpad.net/people/+me\">your launchpad page</a>.": "Sekarang Anda dapat menghubungkan bzr dengan akun Launchpad Anda. Anda akan membutuhkan id launchpad Anda, yang dapat dilihat di <a href=\"https://launchpad.net/people/+me\">halaman launchpad Anda</a>.",
    "Done! Now you can download source code hosted on Launchpad and upload your own code. We'll revisit using bzr in a minute, but for now you're logged in. For a more in-depth introduction to bzr, you can also check the complete <a href=\"http://doc.bazaar.canonical.com/latest/en/user-guide\">Bazaar User Guide</a> provided by Canonical.": "Selesai! Sekarang Anda dapat mengunduh kode sumber yang disimpan di Launchpad dan mengunggah kode Anda sendiri. Kita akan membahas cara menggunkan bzr lagi nanti, tetapi untuk sekarang Anda sudah masuk. Untuk mengenal bzr lebih jauh, Anda juga dapat membaca <a href=\"http://doc.bazaar.canonical.com/latest/en/user-guide\">Panduan Pengguna Bazaar</a> yang disediakan oleh Canonical.",
    "Developer &quot;SDK&quot;": "\"SDK\" Pengembang",
    "At the time of this writing, elementary doesn't have a full SDK like Android or iOS. But luckily, we only need a couple simple apps to get started writing code.": "Saat panduan ini dibuat, elementary belum memiliki SDK lengkap seperti Android atau iOS. Tetapi untungnya, kita hanya membutuhkan beberapa aplikasi sederhana untuk mulai menulis kode.",
    "Scratch": "Scratch",
    "The first piece of our simple &quot;SDK&quot; is the code editor Scratch. This comes by default with elementary OS. It comes with some helpful features like syntax highlighting, auto-save, and the Folder Manager extension. There are other extensions for Scratch as well, like the Outline, Terminal or Devhelp extensions. Play around with what works best for you.": "Bagian pertama dari \"SDK\" sederhana kita adalah penyunting kode Scratch. Disertakan secara bawaan bersama OS elementary. Memiliki beberapa fitur yang sangat membantu seperti ekstensi sintaksis berwarna, autosimpan, dan Pengelola Folder. Ada juga ekstensi lainnya untuk Scratch, seperti ekstensi Outline, Terminal atau Devhelp. Uji cobalah sampai Anda menemukan yang terbaik untuk Anda.",
    "Terminal": "Terminal",
    "We’re going to use Terminal in order to compile our code, push revisions to Bazaar (bzr), and other good stuff. Throughout this guide, we’ll be issuing Terminal commands. You should assume that any command is executed from the directory “Projects” in your home folder unless otherwise stated. Since elementary doesn’t come with that folder by default, you’ll need to create it.": "Kita akan menggunakan terminal untuk mengompilasi kode kita, mengirim perubahan ke Bazaar (bzr), dan hal-hal lainnya. Di sepanjang panduan ini, kita akan sering bermain-main dengan Terminal. Asumsikanlah bahwa setiap perintah dieksekusi dari folder \"Proyek\" di dalam folder beranda Anda, kecuali jika disebutkan lain. Karena secara bawaan elementary tidak memiliki folder tersebut, Anda perlu membuatnya.",
    "Open Terminal and issue the following command:": "Buka Terminal dan ketikkan perintah berikut:",
    "Development Libraries": "Pustaka Pengembangan",
    "In order to build apps you're going to need their development libraries. We can fetch a basic set of libraries with the following terminal command:": "Untuk membuat aplikasi, Anda akan memerlukan pustaka-pustaka pengembangan yang sesuai. Kita dapat mengambil setelan dasar pustaka dengan perintah berikut:",
    "The command <code>apt-get build-dep</code> installs the build dependencies of an app in the repositories. In this case, we're fetching the development libraries needed to build Granite Demo, an example app. We'll talk more about Granite later, but keep in mind that if you want to build an app from source, you can usually get its build dependencies easily by using <code>apt-get build-dep</code>.": "Perintah <code>apt-get build-dep</code> memasang dependensi pembangunan aplikasi dalam repositori. Dalam kasus ini, kita akan mengambil pustaka yang dibutuhkan untuk membuat aplikasi contoh Granite Demo. Kita akan membahas Granite lebih jauh nanti. Harap diingat bahwa jika Anda ingin membangun aplikasi langsung dari sumber, Anda biasanya dapat dengan mudah mendapatkan dependensinya menggunakan <code>apt-get build-dep</code>.",
    "And with that, we're ready to dive into development! Let's move on!": "Dan bersama dengan hal tersebut, kita telah siap memperdalam pengembangan! Ayo lanjutkan!",
    "Hello World": "Halo Dunia",
    "The first app we’ll create will be a basic and generic “Hello World”. We’ll walk through the steps of creating folders to store our source code, compiling our first app, and pushing the project to a bzr branch. Let’s begin.": "Aplikasi pertama yang akan kita buat adalah “Halo Dunia” yang paling dasar dan umum. Kita akan selesaikan tahap demi tahap dari membuat folder sampai menyimpan kode sumber, pengompilasian aplikasi, dan mengirimnya ke cabang bzr. Ayo mulai.",
    "Setting Up": "Pengaturan Tataan",
    "Apps on elementary OS are organized into standardized directories contained in your project's &quot;root&quot; folder. Let's create a couple of these to get started:": "Aplikasi pada elementary OS disusun ke dalam direktori terstruktur yang termuat di dalam folder induk proyek Anda. Mari buat beberapa untuk memulai:",
    "Create your root folder called &quot;gtk-hello&quot;": "Buat folder induk bernama \"gtk-halo\"",
    "Create a folder inside that one called &quot;src&quot;. This folder will contain all of our source code.": "Buat lagi folder di dalamnya dengan nama \"src\". Folder ini akan berisi seluruh kode sumber kita.",
    "Later on, We'll talk about adding other directories like &quot;po&quot; and &quot;data&quot;. For now, this is all we need.": "Nantinya, kita akan membahas tentang menambahkan direktori lain seperti \"po\" dan \"data\". Untuk sekarang, cukup ini saja yang kita perlukan.",
    "Gtk.Window and Gtk.Button": "Gtk.Window dan Gtk.Button",
    "Now what you've been waiting for! We're going to create a window that contains a button. When pressed, the button will display the text &quot;Hello World!&quot; To do this, we're going to use a widget toolkit called GTK+ and the programming language Vala. Before we begin, we highly recommend that you do not copy and paste. Typing each section manually will help you to practice and remember. Let's get started:": "Inilah yang Anda tunggu-tunggu! Kita akan membuat sebuah jendela yang berisi sebuah tombol. Ketika ditekan, tombol akan menampilkan teks \"Halo Dunia!\". Untuk melakukannya, kita akan menggunakan perkakas widget bernama GTK+ dan bahasa pemrograman Vala. Sebelum kita mulai, kami sangat menyarankan Anda agar tidak hanya menyalin dan menempel. Mengetik setiap bagian secara manual akan membantu Anda belajar dan mengingat. Ayo kita mulai:",
    "Create a new file in Scratch and save it as &quot;gtk-hello.vala&quot; inside your &quot;src&quot; folder": "Buat berkas baru dengan Scratch dan simpan sebagai \"gtk-halo.vala\" di dalam folder \"src\" Anda",
    "First we must create the main function of our new GTK app. Type the following in your &quot;gtk-hello.vala&quot;.": "Pertama kita harus buat fungsi utama dari aplikasi GTK baru kita. Ketik kode berikut di \"gtk-halo.vala\" Anda.",
    "Now, that we've initialized Gtk, we'll create a new window and declare a few properties of this window. You'll notice that most of these property names are pretty straightforward. Try to guess what each one does and we'll explain in a second. Type the following after the <code>Gtk.init</code> line, but before the last bracket:": "Kita telah menginisialisasi Gtk. Sekarang kita akan membuat jendela baru dan menjabarkan beberapa properti jendela ini. Anda akan menyadari bahwa sebagian besar nama properti ini cukup jelas apa adanya. Cobalah tebak apa yang masing-masing lakukan dan kami akan jelaskan sesaat lagi. Ketik kode berikut ini setelah baris <code>Gtk.init</code>, sebelum tutup kurawal.",
    "The first line creates a new <code>Gtk.Window</code> called &quot;window&quot;. The second line sets the window title that you see at the top of the window. next, we create a margin inside that window so that widgets don't bump up against the window's edge. Then we tell the window manager that we want to place this window in the center of the screen instead of in the default position (which is usually the top left). We also must give our window a default size so that is does not appear too small for the user to interact with it. Finally, we explain what to do with this process if the main window is closed; In our case, we want to quit.": "Baris pertama membuat <code>Gtk.Window</code> baru bernama \"window\". dan baris kedua menyetel judul jendela yang Anda lihat di bagian paling atas jendela. Selanjutnya, kita buat jarak di dalam jendela tersebut sehingga widget tidak membentur tepi jendela. Lalu, kita beri tahu pengelola jendela bahwa kita ingin menempatkan jendela ini di tengah layar, bukan di posisi bawaan (biasanya di kiri atas). Kita juga harus memberi jendela kita ukuran baku sehingga tidak nampak terlalu kecil untuk pengguna berinteraksi dengannnya. Terakhir, kita jelaskan apa yang dilakukan dengan proses ini jika jendela telah tertutup; Dalam kasus ini, kita ingin proses berhenti atau keluar.",
    "Now that we've defined a nice window, let's put a button inside of it. After our window stuff (but before <code>Gtk.main</code> line), leave a new line and then type the following:": "Karena sekarang kita telah membuat jendela yang bagus, mari kita letakkan tombol ke dalamnya. Setelah baris tentang jendela (tetapi sebelum baris <code>Gtk.main</code>), sisakan satu baris baru dan ketik kode berikut ini:",
    "Any ideas about what happened here? We've created a new <code>Gtk.Button</code> with the label &quot;Click me!&quot;. Then we've said that if this button is clicked, we want to change the label to say &quot;Hello World!&quot; instead. We've also said that we want to make the button insensitive; We do this because clicking the button again has no visible effect. Finally, we add the button to our <code>Gtk.Window</code> and declare that we want to show all of the window's contents.": "Anda tahu apa yang baru saja kita lakukan? Kita telah membuat <code>Gtk.Button</code> baru dengan label \"Klik saya!\". Lalu kita jelaskan jika tombol ini diklik, kita ingin mengubah label menjadi \"Halo Dunia!\". Kita juga menjelaskan bahwa kita ingin membuat tombol tidak sensitif; Kita melakukan ini karena menekan tombolnya lagi tidak menimbulkan efek apapun. Terakhir, kita tambahkan tombol kita ke <code>Gtk.Window</code> dan menjabarkan bahwa kita ingin menampilkan seluruh isi jendela.",
    "Compiling and Running your code": "Mengompilasi dan Menjalankan kode Anda",
    "Ready to test it out? Fire up your terminal and make sure you're in &quot;~/Projects/gtk-hello/src&quot;. Then execute the following commands to compile and run your first Gtk app:": "Siap untuk uji coba? Buka terminal dan pastikan Anda berada di \"~/Proyek/gtk-halo/src\". Lalu eksekusi perintah berikut untuk mengkompilasi dan menjalankan aplikasi Gtk pertama Anda:",
    "Did it work? If so, congratulations! If not, read over your source code again and look for errors. Also check the output of your terminal. Usually there is helpful output that will help you track down your mistake.": "Apakah bekerja? Jika iya, selamat! Jika tidak, baca ulang kode sumber Anda dan cari tahu apa yang salah. Periksa juga keluaran dari terminal Anda. Biasanya ada keluaran yang akan membantu Anda melacak kesalahan.",
    "Pushing to Launchpad": "Mendorong ke Launchpad",
    "After we do anything significant, we must remember to push our code. This is especially important in collaborative development where not pushing your code soon enough can lead to unintentional forks and pushing too much code at once can make it hard to track down any bugs introduced by your code. So let's take a minute to revisit our friend <code>bzr</code>:": "Setelah kita melakukan perubahan yang signifikan, kita harus ingat untuk mendorong kode kita. Hal ini sangat penting dalam pengembangan kolaboratif dimana tidak mendorong kode sesegera mungkin dapat menyebabkan fork yang tidak diinginkan dan mendorong kode terlalu banyak sekaligus akan mempersulit melacak kutu yang muncul oleh kode Anda. Jadi, mari kita sejenak mengunjungi kembali <code>bzr</code>.",
    "Open Terminal and make sure you're in your project's root directory &quot;~Projects/gtk-hello&quot;": "Buka Terminal dan pastikan Anda berada di direktori akar proyek \"~Projects/gtk-halo\" Anda",
    "With these commands, we've told <code>bzr</code> to track this folder as a branch, that we'd like to track revisions on the file &quot;gtk-hello.vala&quot;, we've committed our first revision and explained what we did in the revision, and then we've told <code>bzr</code> to push your code to Launchpad in your <a href=\"https://code.launchpad.net/people/+me/\">junk folder</a>.": "Dengan perintah ini, kita memberi tahu <code>bzr</code> untuk melacak folder ini sebagai cabang, yang kita ingin lacak perubahan-perubahan pada berkas \"gtk-halo.vala\", kita komit perubahan pertama kita dan menjelaskan apa yang kita lakukan pada perubahan tersebut, lalu kita beri tahu <code>bzr</code> untuk mendorong kode ke <a href=\"https://code.launchpad.net/people/+me/\">folder junk</a> Anda di Launchpad.",
    "Victory!": "Kemenangan!",
    "Let's recap what we've learned to do in this first section:": "Mari rangkum apa yang kita pelajari di bagian pertama ini:",
    "We created a new project containing a &quot;src&quot; folder": "Kita membuat proyek baru berisi sebuah folder \"src\"",
    "We created our main vala file and inside it we created a new <code>Gtk.Window</code> and <code>Gtk.Button</code>": "Kita membuat berkas vala utama dan di dalamnya kita buat <code>Gtk.Window</code> dan <code>Gtk.Button</code> baru",
    "We built and ran our app to make sure that everything worked properly": "Kita bangun dan jalankan aplikasi kita untuk memastikan semua bekerja dengan baik",
    "Finally, we commited our first revision and pushed code to Launchpad": "Terakhir, kita komit perubahan pertama kita dan dorong kode ke Launchpad",
    "Feel free to play around with this example. Make the window a different size, set different margins, make the button say other things. When you're comfortable with what you've learned, go on to the next section.": "Jangan ragu untuk bereksperimen dengan contoh ini. Buat jendela dengan ukuran yang berbeda, setel jarak yang berbeda, buat tombol mengatakan hal yang lain. Ketika Anda merasa cukup nyaman dengan apa yang anda pelajari, lanjutkan ke bagian berikutnya.",
    "A Note About Libraries": "Catatan Tentang Pustaka",
    "Remember how when we compiled our code, we used the <code>valac</code> command and the argument <code>--pkg gtk+-3.0</code>? What we did there was make use of a &quot;library&quot;. If you're not familiar with the idea of libraries, a library is a collection of methods that your program can use. So this argument tells <code>valac</code> to include the GTK+ library (version 3.0) when compiling our app.": "Ingat bagaimana ketika kita mengompilasi kode kita, kita menggunakan perintah <code>valac</code> dan argumen <code>--pkg gtk+-3.0</code>? Apa yang kita lakukan di sini adalah memanfaatkan kegunaan sebuah \"pustaka\". Jika Anda tidak familiar dengan istilah pustaka, ia adalah koleksi dari metode-metode yang dapat digunakan oleh program Anda. Jadi, argumen ini memerintahkan <code>valac</code> untuk menyertakan pustaka GTK+ (versi 3.0) ketika pengompilasian aplikasi kita.",
    "In our code, we've used the <code>Gtk</code> &quot;Namespace&quot; to declare that we want to use methods from GTK+ (specifically, <code>Gtk.Window</code> and <code>Gtk.Button.with_label</code>). Notice that there is a hierarchy at play. If you want to explore that hierarchy in more detail, you can <a href=\"http://www.valadoc.org/#!api=gtk+-3.0/Gtk.Button\">check out Valadoc</a>.": "Dalam kode kita, kita telah menggunakan \"Namespace\" <code>Gtk</code> untuk menjabarkan bahwa kita ingin menggunakan metode dari GTK+ (terutama, <code>Gtk.Window</code> dan <code>Gtk.Button.with_label</code>). Perhatikan ada peran hirariki di sana. Jika Anda ingin memperdalam hirarki tersebut lebih rinci, Anda dapat <a href=\"http://www.valadoc.org/#!api=gtk+-3.0/Gtk.Button\">mengecek Valadoc</a>.",
    "Our First App": "Aplikasi Pertama Kita",
    "In the previous chapter, we created a simple &quot;Hello World!&quot; app to show off our vala and Gtk skills. But what if we wanted to share our new app with a friend? They'd have to know which packages to include with the <code>valac</code> command we used to build our app, and after they'd built it they'd have to run it from the build directory like we did. Clearly, we need to do some more stuff to make our app fit for people to use, to make it a <em>real</em> app.": "Di bagian sebelumnya, kita telah membuat aplikasi \"Halo Dunia!\" sederhana untuk menunjukkan kemampuan vala dan Gtk kita. Tetapi, bagaimana jika kita ingin berbagi aplikasi kita dengan teman? Mereka harus tahu paket mana yang harus disertakan pada perintah <code>valac</code> yang telah kita gunakan sebelumnya untuk membangun aplikasi kita, dan setelah mereka membangunnya mereka harus menjalankannya dari direktori pembangunan seperti yang kita lakukan. Jelasnya, kita perlu melakukan beberapa hal lagi untuk membuat aplikasi kita siap untuk digunakan orang lain, untuk membuatnya menjadi aplikasi yang <em>sebenarnya</em>.",
    "Hello (again) World!": "Halo (lagi) Dunia!",
    "To create our first real app, we're going to need all the old stuff that we used in the last example. But don't just copy and paste! Let's take this time to practice our skills and see if we can recreate the last example from memory. Additionally, now that you have the basics, we're going to get a little more complex and a little more organized:": "Untuk membuat aplikasi pertama kita yang sesungguhnya, kita akan membutuhkan semua hal yang kita gunakan di contoh kita yang terakhir. Tapi jangan hanya salin dan tempel! Ayo saat ini kita gunakan untuk melatih kemampuan kita dan lihat apakah kita dapat membuat ulang contoh terakhir hanya dari ingatan. Dengan tambahan, sekarang Anda telah mengetahui hal yang dasar, kita akan membuatnya sedikit lebih rumit dan sedikit lebih terorganisir:",
    "Create a new folder in &quot;~/Projects&quot; called &quot;hello-world&quot; and put our last project in that folder. Now create a new folder inside &quot;~/Projects/hello-world&quot; called &quot;hello-again&quot;. We're doing this because our first &quot;gtk-hello&quot; and &quot;hello-again&quot; are two branches of the same &quot;hello-world&quot; project. As you get more into collaborative development, you're going to have lots of branches. This method will help you stay organized.": "Buat folder baru di dalam \"~/Proyek\" bernama \"halo-dunia\" dan letakkan proyek terakhir kita di dalam folder tersebut. Sekarang buat folder baru di dalam \"~/Proyek/halo-dunia\" bernama \"halo-lagi\". Kita melakukan ini karena \"gtk-halo\" pertama kita dan \"halo-lagi\" adalah dua cabang dari proyek \"halo-dunia\" yang sama. Semakin Anda masuk ke pengembangan kolaboratif, semakin banyak cabang Anda miliki. Metode ini untuk membantu Anda tetap terorganisir.",
    "Now go into &quot;hello-again&quot; and create our directory structure including the &quot;src&quot; folder.": "Sekarang, masuk ke \"halo-lagi\" dan buat struktur direktori termasuk folder \"src\"",
    "Create &quot;hello-again.vala&quot; in the &quot;src&quot; folder.  This time we're going to prefix our file with a small legal header. More about legal stuff later. For now, just copy and paste this, changing out <code>YourName</code> for your actual name:": "Buat \"halo-lagi.vala\" di dalam folder \"src\". Kali ini kita akan memulai berkas dengan tajuk legalitas yang sederhana. Kita akan bahas tentang hal-hal legalitas lagi nanti. Untuk sekarang, cukup salin dan tempel teks berikut ini, ubah <code>NamaAnda</code> dengan nama asli lengkap Anda:",
    "Now, let's create our main function, a <code>Gtk.Window</code>, and set the window's default properties. Refer back to the last chapter if you need a refresher.": "Sekarang, mari kita buat fungsi utama kita, <code>Gtk.Window</code>, dan setel properti jendela baku. Lihat lagi bagian terakhir jika Anda perlu penyegaran.",
    "For the sake of time let's just put a <code>Gtk.Label</code> instead of a <code>Gtk.Button</code>. We don't need to try to make the label do anything when you click it.": "Untuk menghemat waktu kita tuliskan saja <code>Gtk.Label</code> daripada <code>Gtk.Button</code>. Kita tidak perlu mencoba membuat label melakukan apapun ketika Anda mengkliknya.",
    "Don't forget to add it to your window and show the window's contents:": "Jangan lupa menambahkannya ke jendela Anda dan tampilkan isi jendela:",
    "Build &quot;hello-again.vala&quot; just to make sure it all works. If something goes wrong here, feel free to refer back to the last chapter and remember to check your terminal output for any hints.": "Bangun \"halo-lagi.vala\" untuk memastikan semua berjalan baik. Jika terjadi kesalahan, jangan ragu untuk melihat lagi bagian terakhir dan jangan lupa periksa keluaran terminal Anda untuk petunjuk apapun.",
    "Initialize the branch, add your files to the project, and write a commit message using what you learned in the last chapter. Lastly, push your first revision with <code>bzr</code>:": "Inisialisasi cabang, tambah berkas-berkas Anda ke proyek, dan tulis pesan komit menggunakan apa yang telah Anda pelajari di bagian sebelumnya. Terakhir, dorong perubahan pertama Anda dengan <code>bzr</code>:",
    "Everything working as expected? Good. Now, let's get our app ready for other people to use.": "Semua berjalan sesuai yang diharapkan? Bagus. Sekarang, mari buat aplikasi kita siap untuk orang lain gunakan.",
    "The .desktop File": "Berkas .desktop",
    "Every app comes with a .desktop file. This file contains all the information needed to display your app in the Applications menu and in the Dock. Let's go ahead and make one:": "Setiap aplikasi hadir bersama sebuah berkas .desktop. Berkas ini berisi informasi yang diperlukan untuk menampilkan aplikasi kita di menu Aplikasi dan di Dock. Mari lanjutkan dan buat satu:",
    "In your project's root, create a new folder called &quot;data&quot;.": "Di folder akar proyek kita, buat folder baru bernama \"data\"",
    "Create a new file in scratch and save it in the &quot;data&quot; folder as &quot;hello.desktop&quot;.": "Buat berkas baru pada scratch dan simpan di dalam folder \"data\" sebagai \"halo.desktop\".",
    "Type the following into &quot;hello.desktop&quot;. Like before, try to guess what each line does.": "Ketik berikut ini ke dalam \"halo.desktop\". Seperti sebelumnya, coba tebak apa maksud dari masing-masing baris.",
    "The first line declares that this file is a &quot;Desktop Entry&quot; file. The next three lines are descriptions of our app: The branded name of our app, a generic name for our app, and a comment that describes our app's function. Next, we categorize our app. Then, we say what command will execute it. Finally, we give our app an icon (a generic one included in elementary OS) and let the OS know that this isn't a command line app. For more info about crafting .desktop files, check out <a href=\"/docs/human-interface-guidelines/app-launchers\">this HIG entry</a>.": "Baris yang pertama menjelaskan kalau ini adalah berkas \"Desktop Entry\". Tiga baris berikutnya keterangan tentang aplikasi kita: Nama/Merek aplikasi, nama umum aplikasi, dan keterangan yang menjelaskan fungsi aplikasi kita. Terakhir, kita berikan aplikasi kita sebuah ikon (satu yang umum telah ada di OS elementary) dan beri tahu OS jika ini bukan aplikasi berbasis baris perintah. Untuk info lebih lanjut tentang penyusunan .desktop, silahkan cek <a href=\"/docs/human-interface-guidelines/app-launchers\">entri PAM ini</a>.",
    "Finally, let's add this file to bzr and commit a revision:": "Akhirnya, mari kita tambahkan berkas ini ke bzr dan komit perubahannya:",
    "Legal Stuff": "Legalitas",
    "Since we're going to be putting our app out into the wild, we should include some information about who wrote it and the legal usage of its source code. For this we need two new files in our project's root folder: AUTHORS and COPYING.": "Karena kita akan menaruh aplikasi kita ke ranah publik, kita harus menyertakan beberapa informasi tentang siapa yang menulisnya dan legalitas penggunaan kode sumbernya. Untuk ini kita memerlukan dua berkas baru di dalam folder akar proyek kita: AUTHORS dan COPYING.",
    "Authors": "Penulis",
    "The AUTHORS file is pretty straightforward. This file contains your name and email address along with the name and email address of anyone who helped you make your app. It typically looks like this:": "Berkas AUTHORS cukup jelas. Berkas ini berisi nama Anda dan alamat surel Anda bersama dengan nama dan alamat surel siapapun yang membantu Anda membuat aplikasi Anda. Biasanya seperti berikut ini:",
    "Copying": "Penyalinan",
    "The COPYING file contains a copy of the license that your code is released under. For elementary apps this is typically the <a href=\"http://www.gnu.org/licenses/quick-guide-gplv3.html\">GNU Public License</a> (GPL). Remember the header we added to our source code? That header reminds people that your app is licensed and it belongs to you. You can choose other licenses like the MIT license as well, but for this example let's stick to the <a href=\"http://www.gnu.org/licenses/gpl-3.0.txt\">GPL</a>.": "Berkas COPYING berisi salinan lisensi kode yang Anda gunakan sebagai legalitas. Untuk aplikasi elementary biasanya <a href=\"http://www.gnu.org/licenses/quick-guide-gplv3.html\">Lisensi Publik GNU</a> (GPL). Ingat tajuk yang kita tambahkan ke kode sumber? Tajuk tersebut mengingatkan orang lain bahwa aplikasi anda terlisensi dan menjadi milik Anda. Anda dapat memilih lisensi lainnya seperti lisensi MIT, tetapi sekedar untuk contoh kita akan gunakan <a href=\"http://www.gnu.org/licenses/gpl-3.0.txt\">GPL</a>.",
    "Mark Your Progress": "Tandai Perkembangan Anda",
    "Did you remember to add these files to bzr and commit a revision? Each time we add a new file or make a significant change it's a good idea to commit a new revision and push to Launchpad. Keep in mind that this acts as a backup system as well; when we push our work to Launchpad, we know it's safe and we can always revert to a known good revision if we mess up later.": "Apakah Anda ingat cara menambahkan berkas-berkas ini ke bzr dan komit perubahannya? Setiap kita menambahkan berkas baru atau membuat perubahan signifikan, ada baiknya untuk komit perubahan baru tersebut dan dorong ke Launchpad. Perlu diingat bahwa hal ini juga bertindak sebagai sistem pencadangan; ketika kita mendorong pekerjaan kita ke Launchpad, kita tahu hal tersebut aman dan kita selalu bisa kembali ke perubahan sebelumnya yang dikenal baik jika suatu saat kita melakukan kesalahan.",
    "Now that we've got all these swanky files laying around, we need a way to tell the computer what to do with them. Ready for the next chapter? Let's do this!": "Sekarang kita punya banyak berkas terserak, kita perlu cara untuk memberi tahu komputer apa yang harus dilakukan dengan mereka. Siap untuk bagian selanjutnya? Ayo lakukan!",
    "The Build System": "Sistem Bangun",
    "The next thing we need is a build system. The build system that we're going to be using is called <a href=\"http://www.cmake.org\">CMake</a>. We already installed the <code>cmake</code> program at the beginning of this book when we got the build dependencies for Granite Demo. What we're going to do in this step is get a copy of some additional modules for Cmake (support for Vala, translations, etc), and create the files that tell Cmake how to install your program. This includes all the rules for building your source code as well as correctly installing your .desktop file and the binary app that results from the build process.": "Hal berikutnya yang kita butuhkan adalah sistem bangun. Sistem bangun yang akan kita gunakan disebut <a href=\"http://www.cmake.org\">CMake</a>. Kita telah memasang program <code>cmake</code> di awal panduan ini ketika kita mengambil dependensi pem-bangun dari Granite Demo. Apa yang akan kita lakukan pada langkah ini adalah mengambil salinan beberapa modul tambahan untuk Cmake (dukungan untuk Vala, transliterasi, dll) dan membuat berkas yang menjelaskan pada Cmake bagaimana cara memasang program Anda. Ini termasuk semua aturan untuk membangun kode sumber dan juga memasang berkas .desktop dan aplikasi biner dengan benar yang dihasilkan dari proses bangun.",
    "The elementary apps team maintains a copy of the CMake modules that we're going to need. Make sure you're in &quot;~/Projects&quot; (not in your hello-again folder) and then grab the latest copy of those modules with bzr. Notice that we're not in &quot;~/Projects/hello-world&quot;. This is because our cmake modules are not a branch of our Hello World app:": "Tim aplikasi elementary memelihara salinan modul CMake yang kita akan butuhkan. Pastikan Anda di dalam \"~/Proyek\" (bukan di dalam folder halo-lagi) lalu ambil salinan terkini dari modul tersebut dengan bzr. Perhatikan bahwa kita tidak di dalam \"~/Proyek/halo-dunia\". Ini karena modul cmake bukanlah cabang dari aplikasi Halo Dunia kita.",
    "You'll see a folder called &quot;cmake&quot;. Copy that into your &quot;hello-again&quot; folder. It's that easy.": "Anda akan melihat folder bernama \"cmake\". Salinlah ke dalam folder \"halo-lagi\" Anda. Sangat mudah.",
    "Create a new file in your project's root folder called &quot;CMakeLists.txt&quot;. Since this file is a bit long, we've included some comments along the way to explain each section. You don't have to copy those, but type the rest into that file:": "Buat berkas baru di dalam folder akar proyek Anda bernama \"CMakeLists.txt\". Karena berkas ini sedikit lebih panjang, kami telah sertakan beberapa komentar untuk menjelaskan setiap bagian. Anda tidak perlu menyalinnya, tetapi ketiklah ke dalam berkas tersebut:",
    "And you're done! Your app now has a real build system. Don't forget to add these files to bzr and push to launchpad. This is a major milestone in your app's development!": "Selesai! Aplikasi Anda sekarang telah memiliki sistem bangun yang sebenarnya. Jangan lupa menambahkan berkas ini ke bzr dan dorong ke launchpad. Ini kemajuan besar dalam pengembangan aplikasi Anda!",
    "Building and Installing with CMake": "Membangun dan Memasang dengan CMake",
    "Now that we have a build system, let's try it out:": "Sekarang kita telah memiliki sistem bangun, mari kita coba:",
    "Create a new folder in your project's root folder called &quot;build&quot;": "Buat folder di dalam folder akar proyek Anda bernama \"build\"",
    "Change into this directory in terminal and execute the following command:": "Pindah ke direktori ini di terminal dan eksekusi perintah berikut:",
    "This command tells cmake to get ready to build our app using the prefix &quot;/usr&quot;. The <code>cmake</code> command defaults to installing our app locally, but we want to install our app for all users on the computer.": "Perintah ini memerintahkan cmake untuk bersiap membangun aplikasi kita menggunakan prefiks \"/usr\". Perintah <code>cmake</code> baku untuk memasang aplikasi kita secara lokal, tetapi kita ingin memasang aplikasi kita untuk semua pengguna di komputer.",
    "Build your app with <code>make</code> and if successful install it with <code>sudo make install</code>:": "Bangun aplikasi Anda dengan <code>make</code> dan jika berhasil, pasang dengan <code>sudo make install</code>:",
    "If all went well, you should now be able to open your app from the Applications menu and pin it to the Dock.  If you were about to add the &quot;build&quot; folder to your bzr branch and push it, stop! This binary was built for your computer and we don't want to redistribute it. In fact, we built your app in a separate folder like this so that we can easily delete or ignore the &quot;build&quot; folder and it won't mess up our app's source code.": "Jika semua berjalan baik, Anda seharusnya sudah bisa membuka aplikasi Anda dari menu Aplikasi dan menyematkankannya ke Dok. Jika Anda hendak menambahkan folder \"build\" ke cabang bzr Anda dan mendorongnya, hentikan! Aplikasi biner ini dibangun khusus untuk komputer Anda dan kita tidak ingin menyebarluaskannya. Faktanya, kita bangun aplikasi Anda dalam folder yang terpisah seperti ini sehingga kita bisa dengan mudah menghapus atau mengabaikan folder \"build\" dan tidak akan mengacaukan kode sumber kita.",
    "We'll revisit CMake again later to add some more complicated behavior, but for now this is all you need to know to give your app a proper build system. If you want to explore CMake a little more on your own, you can always check out <a href=\"http://www.cmake.org/cmake/help/documentation.html\">CMake's documentation</a>.": "Kita akan kunjungi CMake lagi nanti untuk menambahkan beberapa perilaku yang lebih rumit, untuk sekarang inilah semua yang perlu Anda ketahui guna memberi aplikasi Anda sistem bangun yang layak. Jika Anda ingin mengetahui lebih tentang CMake, Anda selalu dapat mengunjungi <a href=\"http://www.cmake.org/cmake/help/documentation.html\">Dokumentasi CMake</a>.",
    "Review": "Ulasan",
    "Let's review what all we've learned to do:": "Mari ulas apa yang telah kita pelajari:",
    "Create a new Gtk app using <code>Gtk.Window</code>, <code>Gtk.Button</code>, and <code>Gtk.Label</code>": "Membuat aplikasi Gtk baru menggunakan <code>Gtk.Window</code>, <code>Gtk.Button</code>, dan <code>Gtk.Label</code>",
    "Keep our projects organized into branches": "Menjaga proyek kita terorganisir ke dalam cabang-cabang",
    "License our app under the GPL and declare our app's authors in a standardized manner": "Melisensi aplikasi kita di bawah GPL dan mendeklarasikan para penulis aplikasi dalam format yang standar",
    "Create a .desktop file that tells the computer how to display our app in the Applications menu and the Dock": "Membuat sebuah berkas .desktop yang memberitahu komputer bagaimana cara menampilkan aplikasi kita di menu Aplikasi dan di Dok",
    "Set up a CMake build system that contains all the rules for building our app and installing it cleanly": "Menata sistem bangun CMake yang berisi semua aturan untuk membangun dan memasang aplikasi kita dengan rapi",
    "That's a lot! You're well on your way to becoming a bonified app developer for elementary OS. Give yourself a pat on the back, then take some time to play around with this example. Change the names of files and see if you can still build and install them properly. Ask another developer to branch your project from launchpad and see if it builds and installs cleanly on their computer. If so, you've just distributed your first app! When you're ready, we'll move onto the next section: Packaging.": "Itu banyak! Anda berada di jalan yang benar untuk menjadi pengembang aplikasi yang bonafide untuk OS elementary. Beri selamat untuk diri Anda sendiri atas apa yang telah Anda raih, lalu sediakan sedikit waktu bereksperimen dengan contoh ini. Ubah nama berkas dan lihat apakah Anda masih bisa bangun dan memasangnya dengan benar. Minta pengembang lain untuk membuat cabang dari launchpad dan lihat apakah terbangun dan terpasang dengan rapi di komputer mereka. Jika iya, Anda telah menyebarluaskan aplikasi pertama Anda! Kapanpun Anda siap, kita akan lanjutkan ke bagian selanjutnya: Pengepakan.",
    "Adding Translations": "Menambah Terjemahan",
    "Now that you've learned about CMake, the next step is to make your app able to be translated to different languages. The first thing you need to know is how to convert strings in your code into translatable strings. Here's an example:": "Setelah anda mengenal CMake, tahap selanjutnya adalah membuat aplikasi anda bisa diterjemahkan ke bahasa lain. Hal pertama yang perlu diketahui adalah cara mengkonversi string dalam kode anda menjadi bisa diterjemahkan. Contoh:",
    "See the difference? We just added <code>_()</code> around the string! Well, that was easy!": "Lihat bedanya? Kami hanya menambah <code>_()</code> pada string! Gimana, mudah 'kan?",
    "Go back to your project and make all your strings translatable by adding <code>_()</code>": "Silakan kembali ke proyek anda dan buatlah semua string anda bisa diterjemahkan dengan menambah <code>_()</code>",
    "Add the following lines in the &quot;CMakeLists.txt&quot; file you created a moment ago:": "Tambahkan baris berikut dalam berkas \"CMakeLists.txt\" yang sudah anda buat:",
    "Create a directory named &quot;po&quot; on the root folder of your project. Inside of your po directory you will need to create another CMakeLists.txt file. This time, it's contents will be:": "Buat folder bernama \"po\" dalam folder utama proyek anda. Dalam folder po tersebut buat berkas bernama CMakeLists.txt. Kali ini, isinya adalah:",
    "On your build directory execute the following commands:": "Dalam direktori build, jalankan perintah berikut:",
    "Don't forget to add this new directory and it's contents to bzr": "Jangan lupa menambahkan direktori baru ini dan isinya ke bzr",
    "That's it! CMake will automatically add all the string marked with <code>_()</code> into a .pot template file, and a file for each available language where you'll place the translatable strings.": "Sudah! CMake akan otomatis menambah semua string bertanda <code>_()</code> ke berkas template .pot, dan satu berkas untuk tiap bahasa yang tersedia dimana anda menempatkan string yang bisa diterjemahkan.",
    "Packaging": "Pengepakan",
    "While having a build system is great, our app still isn't ready for regular users. We want to make sure our app can be built and installed without having to use Terminal. What we need to do is package our app. To do this, we use the Debian packaging format (.deb) on elementary OS. This section will teach you how to package your app as a .deb file, hosted in a Personal Package Archive (PPA) on Launchpad. This will allow normal people to install your app and even get updates for it in Update Manager.": "Meskipun memiliki sistem bangun itu hebat, aplikasi kita masih belum siap untuk pengguna umum. Kita ingin memastikan aplikasi kita dapat dibangun dan dipasang tanpa menggunakan Terminal. Apa yang harus kita lakukan adalah membuat paket aplikasi kita. Untuk melakukannya, kita menggunakan format pengepakan Debian (.deb) pada OS elementary. Bagian ini akan mengajarkan Anda bagaimana mengepak aplikasi Anda menjadi berkas .deb, diinang di Personal Package Archive (PPA) di Launchpad. Hal ini memungkinkan orang lain memasang aplikasi Anda dan bahkan mendapatkan pemutakhiran melalui Pengelola Pemutakhiran.",
    "Practice Makes Perfect": "Latihan Membuat Sempurna",
    "If you want to get really good really fast, you're going to want to practice. Repetition is the best way to commit something to memory. So let's recreate our entire Hello World app again <em>from scratch</em>:": "Jika Anda ingin mahir dengan cepat, yang Anda perlu lakukan adalah latihan. Pengulangan adalah cara yang terbaik untuk menyimpan sesuatu ke dalam ingatan. Jadi, mari kita buat ulang aplikasi Halo Dunia lagi <em>dari awal</em>:",
    "Create a new branch folder &quot;hello-packaging&quot;": "Buat folder cabang baru \"pengepakan-halo\"",
    "Set up our directory structure including the &quot;src&quot; and &quot;data&quot; folders.": "Siapkan struktur direktori kita termasuk folder \"src\" dan \"data\".",
    "Add your Authors, Copying, .desktop, and source code.": "Tambahkan berkas Penulis, Penyalinan, .desktop dan kode sumber.",
    "Now set up the CMake build system.": "Sekarang, siapkan sistem bangun CMake.",
    "Test everything!": "Uji coba semuanya!",
    "Did you commit and push to launchpad for each step? Keep up these good habits and let's get to packaging this app!": "Apakah Anda komit dan dorong ke launchpad untuk setiap langkah? Lakukan kebiasaan bagus ini dan mari kita lanjutkan mengepak aplikasi ini!",
    "Debian Control": "Kontrol Debian",
    "Now it's time to create the rules that will allow your app to be built as a .deb package. Let's dive right in:": "Sekarang waktunya membuat aturan yang memungkinkan aplikasi Anda dibangun menjadi paket .deb. Mari langsung kita mulai:",
    "Like CMake, elementary maintaines a simple version of the &quot;debian&quot; folder that contains all the files we need for packaging. Let's grab a copy of that with bzr:": "Seperti CMake, elementary memelihara versi sederhana folder \"debian\" yang berisi semua berkas yang kita butuhkan untuk pengepakan. Mari kita ambil salinannya dengan bzr:",
    "Copy the &quot;debian&quot; folder from that branch into your &quot;hello-packaging&quot; folder.": "Salin folder \"debian\" dari cabang tersebut ke dalam folder \"pengepakan-halo\" Anda.",
    "Open the file called &quot;changelog&quot; and make it look like below:": "Buka berkas bernama \"changelog\" dan buat seperti di bawah ini:",
    "The first line contains your app's binary name, version, OS codename, and how urgently your package should be built. Remember that your app's binary name is lowercase and does not contain spaces. After the <code>*</code> is a list of your changes. Finally, you include your name, email address, and the date. For more information about the debian changelog, make sure to read the <a href=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog\">documentation</a>.": "Baris pertama adalah nama aplikasi biner Anda, versi, nama kode OS, dan seberapa penting paket Anda harus dibangun. Ingat bahwa nama aplikasi biner Anda menggunakan huruf kecil dan tidak mengandung spasi. Setelah <code>*</code> adalah daftar perubahan yang dibuat. Terakhir, Anda sertakan nama Anda, alamat surel, dan tanggal. Untuk informasi mengenai catatan perubahan debian, pastikan Anda membaca <a href=\"http://www.debian.org/doc/debian-policy/ch-source.html#s-dpkgchangelog\">dokumentasinya</a>.",
    "Open the file called &quot;control&quot; and make it look like below:": "Buka berkas bernama \"control\" dan buat seperti di bawah ini:",
    "Open the file called &quot;copyright&quot;. We only need to edit what's up top:": "Buka berkas bernama \"copyright\". Kita hanya perlu menyunting bagian paling atas:",
    "That wasn't too bad right? We'll set up more complicated packaging in the future, but for now this is all you need. If you'd like you can always read <a href=\"http://www.debian.org/doc/debian-policy/\">more about Debian packaging</a>.": "Tidak terlalu sulit bukan? Kita akan siapkan pengepakan yang lebih rumit di waktu yang akan datang, tapi untuk sekarang inilah semua yang kita butuhkan. Jika Anda ingin, Anda selalu dapat membaca <a href=\"http://www.debian.org/doc/debian-policy/\">lebih tentang pengepakan Debian</a>.",
    "Launchpad Recipes": "Resep Launchpad",
    "Now that we have our &quot;debian&quot; folder in order, it's time to go to launchpad and create a recipe: instructions what code to build, how often to build it, and where to put the resulting packages.": "Sekarang kita telah memiliki folder \"debian\", waktunya mengunjungi launchpad dan buat sebuah resep: instruksi tentang kode apa yang akan dibangun, seberapa sering dibangun, dan dimana menempatkan hasil pengepakan.",
    "<a href=\"https://code.launchpad.net/people/+me/+junk/hello-packaging/+new-recipe\">Click this link</a> or go to Launchpad, find your hello-packaging branch, then select <strong>Create packaging recipe</strong>.": "<a href=\"https://code.launchpad.net/people/+me/+junk/pengepakan-halo/+new-recipe\">Klik tautan ini</a> atau langsung kunjungi Launchpad, temukan cabang pengepakan-halo Anda, lalu pilih <strong>Create packaging recipe</strong>.",
    "Read through the options available to you. You can go ahead and keep the defaults for Name, Description (it's blank), Owner, Daily builds, and PPA but you can also customize a bit if you'd like.": "Baca semua opsi yang tersedia untuk Anda. Anda bisa terus melanjutkan dan membiarkan Name, Description (it's blank), Owner, Daily builds, dan PPA tetap baku, tetapi jika Anda mau, Anda juga bisa menyesuaikannya sedikit.",
    "When you get down to a set of checkboxes with the header &quot;Default distribution series&quot;, make sure you select &quot;Trusty&quot;. elementary OS Freya shares it's core with Ubuntu Trusty, so packages built on Trusty will also work on Freya.": "Ketika Anda sampai pada set kotak centang dengan tajuk \"Seri distribusi baku\", pastikan Anda memilih \"Trusty\". elementary OS Freya berbagi kode inti dengan Ubuntu Trusty, jadi pembangunan paket pada Trusty juga akan bekerja pada Freya.",
    "For recipe text, we're going to change it ever so slightly to conform better with the official Debian rules. Change out the first line for this one:": "Untuk teks resep, kita akan ubah sedikit agar sesuai dengan aturan resmi Debian. Ganti baris pertama dengan yang satu ini:",
    "Notice that this is ever so slightly different from the default line which includes <code>{debupstream}-0~{revno}</code> instead of <code>{debupstream}+r{revno}-0</code>.": "Perhatikan bahwa ini sedikit berbeda, alih-alih <code>{debupstream}+r{revno}-0</code>, baris baku memuat <code>{debupstream}-0~{revno}</code>.",
    "When you're happy with the options you've chosen, select <strong>Create Recipe</strong>.": "Jika Anda puas dengan opsi yang telah Anda buat, pilih <strong>Create Recipe</strong>.",
    "Now that you've created a recipe, you only have to wait until Launchpad finishes the build! If everything goes as planned, your new PPA will contain a packaged app which other people can install and run with ease. Additionally, anyone using your PPA will be able to get updates for your app if you upload a new version. We'll talk more about how to do that later.": "Sekarang Anda telah membuat sebuah resep, Anda hanya perlu menunggu Launchpad selesai membangun! Jika semua berjalan sesuai rencana, PPA baru Anda akan berisi paket aplikasi yang orang lain dapat pasang dan jalankan dengan mudah. Sebagai tambahan, semua orang yang menggunakan PPA Anda akan mendapatkan pemutakhiran aplikasi pada saat Anda mengunggah versi baru. Kita akan ulas nanti tentang bagaimana cara melakukannya.",
    "Creating Layouts": "Menyusun Tata Letak",
    "Now that you know how to code, build, and distribute an app using Vala, Gtk, CMake, and Launchpad PPAs, it’s time to learn a little bit more about how to build out your app into something really useful. The first thing we need to learn is how to lay out widgets in our window. But we have a fundamental problem: We can only add one widget (one “child”) to <code>Gtk.Window</code>. So how do we get around that to create complex layouts in a Window? We have to add a widget that can contain multiple children. One of those widgets is <code>Gtk.Grid</code>.": "Sekarang Anda telah mengetahui bagaimana menulis kode, membangun, dan menyebarluaskan sebuah aplikasi menggunkan Vala, Gtk, CMake dan PPA Launchpad, waktunya untuk mempelajari bagaimana membuat aplikasi Anda menjadi sesuatu yang benar-benar berguna. Yang pertama kita perlu pelajari adalah bagaimana menata letak widget di dalam jendela kita. Tetapi kita punya masalah yang cukup fundamental: Kita hanya bisa menambahkan satu widget (satu “anakan”) ke <code>Gtk.Window</code>. Jadi, bagaimana caranya agar kita bisa membuat tata letak yang rumit dalam sebuah \"Window\"? Kita harus menambahkan sebuah widget yang dapat memuat banyak anakan. Salah satu widget tersebut adalah <code>Gtk.Grid</code>.",
    "Widgets as Subclasses of Other Widgets": "Widget sebagai Sub-Kelas dari Widget Lain",
    "Before we get into <code>Gtk.Grid</code>, let’s stop for a second and take some time to understand Gtk a little better. At the lower level, Gtk has classes that define some pretty abstract traits of widgets such as <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Container\"><code>Gtk.Container</code></a> and <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Orientable\"><code>Gtk.Orientable</code></a>. These aren’t widgets that we’re going to use directly in our code, but they’re used as building blocks to create the widgets that we do use. It’s important that we understand this, because it means that when we understand how to add children to a <code>Gtk.Container</code> like <code>Gtk.Grid</code>, we also understand how to add children to a <code>Gtk.Container</code> like <code>Gtk.Toolbar</code>. Both Grid and Toolbar are widgets that are subclasses of the more abstract class <code>Gtk.Container</code>.": "Sebelum kita masuk ke dalam <code>Gtk.Grid</code>, mari berhenti sejenak dan luangkan waktu untuk memahami Gtk sedikit lebih baik. Pada tingkat dasar, Gtk memiliki kelas yang menjabarkan beberapa trait abstak dari widget seperti <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Container\"><code>Gtk.Container</code></a> dan <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Orientable\"><code>Gtk.Orientable</code></a>. Ini bukan widget yang akan kita gunakan secara langsung dalam kode kita, tetapi widget tersebut digunakan sebagai blok-blok untuk membuat widget yang akan kita gunakan. Penting bagi kita untuk memahami hal ini, karena berarti bahwa ketika kita memahami bagaimana menambahkan anakan ke <code>Gtk.Container</code> seperti <code>Gtk.Grid</code>, kita juga memahami bagaimana cara menambahkan anakan ke sebuah <code>Gtk.Container</code> seperti <code>Gtk.Toolbar</code>. \"Grid\" dan \"Toolbar\" keduanya adalah widget yang juga subkelas dari kelas yang lebih abstrak <code>Gtk.Container</code>.",
    "If you want to understand more about these widgets and the parts of Gtk that they subclass, jump over to <a href=\"http://valadoc.org/\">Valadoc</a> and search for a widget like <code>Gtk.Grid</code>. See that big tree at the top of the page? It shows you every component of Gtk that <code>Gtk.Grid</code> subclasses and even what those components subclass. Having a lower level knowledge of Gtk will help you to implement widgets you haven’t worked with before since you will understand how their parent classes work.": "Jika Anda ingin memahami lebih lanjut tentang widget-widget ini dan bagian dari Gtk yang widget tersebut menjadi subkelasnya, kunjungi <a href=\"http://valadoc.org/\">Valadoc</a> dan cari widget seperti <code>Gtk.Grid</code>. Lihat bagan pohon besar di bagian atas halaman? Itu menunjukkan setiap komponen dari Gtk yang <code>Gtk.Grid</code> menjadi subkelasnya dan bahkan subkelas komponen itu sendiri. Memiliki pengetahuan dasar tentang Gtk akan membantu Anda mengimplementasikan widget yang Anda belum pernah temui sebelumnya karena Anda akan memahami bagimana kelas induk mereka bekerja.",
    "Gtk.Grid": "Gtk.Grid",
    "Now that we’ve gotten that out of the way, let’s get back to our Window and <code>Gtk.Grid</code>. Since you’re a master developer now, you can probably set up a new project complete with CMake, push it to Launchpad, and build a PPA in your sleep. If you want the practice, go ahead and do all of that again. Otherwise, it’s probably convenient for our testing purposes to just play around locally and build from Terminal. So code up a nice <code>Gtk.Window</code> without anything in it and make sure that builds. Ready? Let’s add a Grid.": "Mari kembali ke \"Window\" dan <code>Gtk.Grid</code>. Karena sekarang Anda adalah pengembang master, Anda mungkin bisa menyiapkan proyek baru lengkap dengan CMake, mendorong ke Launchpad, dan bangun sebuah PPA sembari tertidur. Jika Anda ingin latihan, lakukanlah, dan ulangi semuanya lagi. Jika tidak, mungkin lebih aman untuk tujuan uji coba, bereksperimen secara lokal dan bangun melalui Terminal. Jadi, tulislah kode <code>Gtk.Window</code> yang bagus tanpa apapun di dalamnya dan pastikan dapat dibangun. Siap? Mari kita tambahkan \"Grid\".",
    "Just like when we add a Button or Label, we need to create our <code>Gtk.Grid</code>. As always, don’t copy and paste! Practice makes perfect. We create a new Gtk.Grid like this:": "Seperti saat kita menambahkan \"Button\" atau \"Label\", kita perlu membuat <code>Gtk.Grid</code>. Seperti biasanya, jangan salin dan tempel! Latihan membuat sempurna. Kita buat Gtk.Grid baru seperti ini:",
    "Remember that Button and Label accepted an argument (a String) in the creation method (that’s the stuff in parentheses and quotes). As shown above, <code>Gtk.Grid</code> doesn’t accept any arguments in the creation method. However, you can still change the grid’s properties (like <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Orientation\">orientation</a>) as we did on the second line. Here, we’ve declared that when we add widgets to our grid, they should stack vertically.": "Ingat \"Button\" dan \"Label\" menerima sebuah argumen (sebuah String) pada metode pembuatan (yang di dalam tanda kurung dan tanda petik). Seperti contoh ditampilkan di atas, <code>Gtk.Grid</code> tidak menerima argumen apapun dalam metode pembuatan ini. Tapi, anda masih bisa mengubah properti grid (seperti <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Orientation\">orientation</a>) sebagaimana kita lakukan di baris kedua. Di sini, kita telah jabarkan bahwa ketika kita menambahkan widget ke grid, mereka seharusnya tersusun secara vertikal.",
    "Let’s add some stuff to the Grid:": "Mari tambahkan beberapa hal ke \"Grid\":",
    "Super easy stuff, right? We can add the grid to our window using the same method that we just used to add widgets to our grid:": "Sangat mudah kan? Kita bisa menambahkan grid ke jendela menggunakan metode yang sama yang baru saja gunakan untuk menambahkan widget ke grid:",
    "Now build your app and see what it looks like. Since we’ve given our grid a <code>Gtk.Orientation</code> of <code>VERTICAL</code> the labels stack up on top of each other. Try creating a <code>Gtk.Grid</code> without giving it an orientation. By default, <code>Gtk.Grid</code>’s orientation is horizontal. You really only ever have to give it an orientation if you need it to be vertical.": "Sekarang bangun aplikasi Anda dan lihat seperti apa jadinya. Dikarenakan kita telah menetapkan nilai <code>VERTICAL</code> untuk <code>Gtk.Orientation</code>, membuat label saling bertumpuk satu sama lain. Coba buat <code>Gtk.Grid</code> tanpa menetapkan orientasi. Secara bawaan, orientasi <code>Gtk.Grid</code> adalah horizontal. Anda hanya perlu menetapkan orientasi jika Anda benar-benar menginginkannya menjadi vertikal.",
    "Functionality in Gtk.Grid": "Fungsionalitas dalam Gtk.Grid",
    "Okay, so you know all about using a <code>Gtk.Grid</code> to pack multiple children into a Window. What about using it to lay out some functionality in our app? Let’s try building an app that shows a message when we click a button. Remember in our first “Hello World” how we changed the label of the button with <code>button.clicked.connect</code>? Let’s use that method again, but instead of just changing the label of the button, we’re going to use it to change an empty label to a message.": "Ok, jadi Anda tahu semua tentang menggunakan <code>Gtk.Grid</code> untuk mengepak banyak anakan ke dalam sebuah \"Window\". Bagaimana dengan mempergunakannya untuk membuat aplikasi kita fungsional? Mari mencoba membuat aplikasi yang menampilkan pesan ketika kita menekan sebuah tombol. Ingat di \"Halo Dunia\" bagaimana kita mengubah label sebuah tombol dengan <code>button.clicked.connect</code>? Mari kita gunakan metode itu lagi, tetapi alih-alih hanya mengubah label sebuah tombol, kita akan mempergunakannya untuk mengubah label kosong menjadi sebuah pesan.",
    "Let’s create a Window with a vertical Grid that contains a Button and a Label:": "Mari membuat sebuah \"Window\" dengan \"Grid\" vertikal yang berisi sebuah \"Button\" dan sebuah \"Label\":",
    "This time when we created our grid, we gave it another property: <code>row_spacing</code>. We can also add <code>column_spacing</code>, but since we’re stacking widgets vertically we’ll only see the effect of <code>row_spacing</code>. Notice how we can create new widgets outside the grid and then pack them into the grid by name. This is really helpful when you start using different methods to change the properties of your widgets.": "Kali ini ketika kita membuat grid, kita berikan properti yang berbeda: <code>row_spacing</code>. Kita juga bisa tambahkan <code>column_spacing</code>, tetapi karena kita menyusun widget secara vertikal, kita hanya akan melihat efek dari <code>row_spacing</code>. Perhatikan bagaimana kita bisa membuat wiget di luar grid lalu mengepaknya ke dalam grid berdasarkan nama. Ini sangat membantu ketika Anda mulai menggunakan metode yang berbeda untuk mengubah properti widget Anda.",
    "Now, let’s hook up the button to change that label. To keep our code logically separated, we’re going to add it below <code>this.add (grid);</code>. In this way, the first portion of our code defines the UI and the next portion defines the functions that we associated with the UI:": "Sekarang, kaitkan tombol untuk mengubah label tersebut. Untuk menjaga kode kita tetap terpisah dengan logis, kita akan menambahkannya di bawah <code>this.add (grid);</code>. Dengan cara ini, bagian pertama kode menjabarkan UI dan bagian berikutnya menjabarkan fungsi-fungsi yang kita hubungkan dengan UI:",
    "Remember, we set the button as insensitive here because clicking it again has no effect. Now compile your app and marvel at your newfound skills. Play around with orientation and spacing until you feel comfortable.": "Ingat, kita atur tombol menjadi tidak sensitif karena menekannya lagi membuatnya tidak memiliki efek apapun. Sekarang kompilasikan aplikasi Anda dan kagumilah keahlian baru Anda. Bereksperimenlah dengan orientasi dan jarak sampai Anda merasa nyaman dengannya.",
    "The Attach Method": "Metode \"Attach\"",
    "While we can use <code>Gtk.Grid</code> simply to create single row or single column layouts with the add method, we can also use it to create row-and-column-based layouts with the <code>attach</code> method. First we’re going to create a new <code>Gtk.Grid</code> and set both column and row spacing, then we’ll create all the widgets we want to attach to our grid, and finally we’ll attach them.": "Sementara kita dapat menggunakan <code>Gtk.Grid</code> sederhana untuk membuat satu baris atau satu kolom layout dengan metode penambahan, kita juga dapat menggunakannya untuk membuat layout berbasis baris-dan-kolom dengan metode <code>attach</code>. Pertama-tama kita akan membuat <code>Gtk.Grid</code> baru kemudian mengatur spasi kolom dan baris, lalu kita akan membuat semua widget yang akan kita lampirkan pada kisi-kisi, dan akhirnya kita akan lampirkan.",
    "Make sure to give the Grid, Buttons, and Labels unique names that you’ll remember. It’s best practice to use descriptive names so that people who are unfamiliar with your code can understand what a widget is for without having to know your app inside and out.": "Pastikan untuk memberi \"Grid\", \"Button\", dan \"Label\" nama unik yang Anda akan terus mengingatnya. Suatu kebiasaan yang baik untuk menggunakan nama yang deskriptif sehingga orang lain yang tidak familiar dengan kode Anda dapat memahami untuk apa sebuah widget tanpa perlu mengetahui aplikasi Anda luar dan dalam.",
    "Notice that the attach method takes 5 arguments:": "Perhatikan metode \"attach\" memiliki 5 argumen:",
    "The widget that you want to attach to the grid.": "Widget yang ingin Anda sematkan ke grid.",
    "The column number to attach to starting at 0.": "Nomor kolom untuk disematkan dimulai dari 0.",
    "The row number to attach to starting at 0.": "Nomor baris untuk disematkan dimulai dari 0.",
    "The number of columns the widget should span.": "Jumlah kolom rentang widget.",
    "The number of rows the widget should span.": "Jumlah baris rentang widget.",
    "You can also use <code>attach_next_to</code> to place a widget next to another one on <a href=\"http://references.valadoc.org/#!api=gtk+-3.0/Gtk.PositionType\">all four sides</a>. Don’t forget to add the functionality associated with our buttons:": "Anda juga dapat menggunakan <code>attach_next_to</code> untuk meletakkan widget di <a href=\"http://references.valadoc.org/#!api=gtk+-3.0/Gtk.PositionType\">semua keempat sisinya</a>. Jangan lupa menambahkan fungsi yang terkait pada tombol:",
    "You’ll notice in the example code above that we’ve created a 2 x 2 grid with buttons on the left and labels on the right. The top label goes from blank to “Hello World!” and the button label is rotated 90 degrees. Notice how we gave the buttons labels that directly call out what they do to the other labels.": "Anda perhatikan di kode contoh kita di atas, kita telah membuat sebuah grid 2 x 2 dengan tombol di sebelah kiri dan label di sebelah kanan. Label puncak berubah dari kosong menjadi \"Halo Dunia!\" dan label tombol berputar 90 derajat. Perhatikan bagaimana kita memberi tombol label yang secara langsung menjelaskan apa yang mereka lakukan ke label lainnya.",
    "Let’s recap what we learned in this section:": "Mari kita rekap apa yang kita pelajari di bagian ini:",
    "We learned about the building blocks of Gtk and the importance of subclasses": "Kita mempelajari tentang blok-blok Gtk dan pentingnya subkelas.",
    "We packed multiple children into a Window using <code>Gtk.Grid</code>": "Kita mengepak beberapa anakan ke dalam sebuah \"Window\" menggunakan <code>Gtk.Grid</code>",
    "We set the properties of <code>Gtk.Grid</code> including its orientation and spacing": "Kita tetapkan properti <code>Gtk.Grid</code> termasuk orientasi dan jarak",
    "We added multiple widgets into a single Gtk.Grid using the attach method to create complex layouts containing Buttons and Labels that did cool stuff.": "Kita tambahkan beberapa widget ke dalam Gtk.Grid tunggal menggunakan metode \"attach\" untuk membuat tata letak rumit berisi \"Button\" dan \"Label\" yang melakukan hal yang keren.",
    "Now that you understand more about Gtk, Grids, and using Buttons to alter the properties of other widgets, try packing other kinds of widgets into a window like a Toolbar and changing other properties of <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Label\">Labels</a> like <code>width_chars</code> and <code>ellipsize</code>. Don’t forget to play around with the attach method and widgets that span across multiple rows and columns. Remember that Valadoc is super helpful for learning more about the methods and properties associated with widgets.": "Sekarang kita telah lebih memahami tentang Gtk, \"Grid\", dan penggunaan \"Button\" untuk mengubah properti dari widget lainnya, mencoba mengepak jenis widget lain ke dalam jendela, contohnya \"Toolbar\", dan mengubah properti  <a href=\"http://valadoc.org/#!api=gtk+-3.0/Gtk.Label\">Label</a> lainnya seperti <code>width_chars</code> dan <code>ellipsize</code>. Jangan lupa bereksperimen dengan metode \"attach\" dan widget yang merentang sepanjang baris dan kolom. Ingat selalu bahwa Valadoc sangat membantu dalam mempelajari metode dan properti yang terkait dengan widget.",
    "Next Page:": "Halaman Selanjutnya:",
    "Reference": "Referensi"
}