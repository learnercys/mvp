{
    "Reference": "Referensi",
    "Now that you've stepped through the developer guide like a champ, we have some reference materials for you. This would be a great place to bookmark and refer back to when you have questions about elementary development.": "Melihat bahwa Anda telah melewati seluruh panduan pengembang seperti seorang pemenang, kami memiliki beberapa materi sebagai referensi untuk Anda. Ini akan menjadi tempat bagus untuk ditandai dan dijadikan acuan nantinya ketika Anda memiliki pertanyaan tentang pengembangan elementary.",
    "Code Style": "Kode Gaya",
    "The purpose of this guide is to provide clean and accurate instructions on\nwriting good code across all elementary projects. This guideline is to be\nfollowed on every file, in order to keep our code consistent and readable. We\nare also inheriting some of the GNOME's Vala guidelines to keep our code\nconsistent with other Vala programs.": "Tujuan dari panduan ini adalah untuk menyediakan petunjuk yang jelas dan akurat tentang penulisan kode yang baik di semua proyek elementary. Pedoman ini harus\ndiikuti di setiap berkas, dalam rangka menjaga kode kami tetap konsisten dan dapat dibaca. Kami juga mengikuti beberapa pedoman Vala pada GNOME untuk menjaga kode kami tetap konsisten dengan program Vala lainnya.",
    "If the guidelines here proposed are followed, newcomers to elementary\ndevelopment will be more easily able to join the development and\nunderstand code. Besides, it'll make it easier for all developers to work on\napplications that they don't usually work on, because the code will be\nconsistent. Finally, as Guido Van Rossum said - &quot;Code is much more often read\nthan written&quot;, so having nicely written code is crucial.": "Jika pedoman yang diusulkan di sini diikuti, pendatang baru dalam pengembangan\nelementary akan lebih mudah memahami kode dan bergabung\ndalam pengembangan. Selain itu, hal tersebut akan mempermudah semua pengembang untuk bekerja pada\naplikasi yang biasanya mereka jarang kerjakan, karena kodenya akan\nkonsisten. Terakhir, seperti Guido Van Rossum katakan - \"Kode akan lebih sering dibaca\ndaripada ditulis\", jadi memiliki kode yang penulisannya bagus sangatlah penting.",
    "Whitespace": "Spasi",
    "There is no trailing whitespace at the end of a line, whether it's empty or\nnot. There is also no empty line after declaring a function:": "Tidak ada spasi yang tertinggal di akhir baris, apakah kosong atau\ntidak. Juga tidak ada baris kosong setelah menyatakan sebuah fungsi:",
    "White space comes before opening parentheses:": "Terdapat spasi sebelum kurung buka:",
    "Whitespace goes in all maths-related code, between numbers and operators.": "Spasi di semua kode terkait matematika, antara angka dan operator.",
    "Indentation": "Pemberian inden",
    "Vala code is indented using 4 spaces for consistency and readability.": "Kode Vala menggunakan indentasi 4 spasi untuk konsistensi dan kemudahan dalam membaca.",
    "In classes, functions, loops and general flow control, the first parentheses\nis on the end of the first line (&quot;One True Brace Style&quot;), followed by the\nindented code, and a line closing the function with a curly bracket:": "Dalam kelas, fungsi, perulangan dan alur kontrol umum, kurung yang pertama\nberada di akhir baris pertama (\"Gaya Satu Kurawal yang Sebenarnya\"), diikuti oleh\nkode yang terindentasi, dan baris terakhir menutup fungsi dengan kurawal:",
    "On conditionals and loops, always use braces even if there's only one line of code:": "Untuk conditionals dan loop, selalu gunakan tanda kurung bahkan jikalau hanya ada satu baris kode.",
    "Cuddled else and else if:": "else dan else if:",
    "If you are checking the same variable more than twice, use switch/case instead of multiple else/if:": "Kalau Anda sedang memeriksa variable yang sama lebih dari dua kali, lebih baik gunakan switch/case daripada menggunakan if/else secara berulang.",
    "Classes and files": "Kelas dan berkas",
    "Only having one class per file is recommended.": "Direkomendasikan hanya ada satu kelas untuk setiap berkas.",
    "All files have the same name of the class in them.": "Semua berkas memiliki nama yang sama dengan nama kelas yang ada di dalamnya.",
    "Separate code into classes for easier extensibility.": "Pisahkan kode menjadi kelas-kelas untuk kemudahan pengembangan.",
    "Comments": "Komentar",
    "Comments are either on the same line as the code or in a special line.": "Komentar bisa di baris yang sama dengan kode atau di baris khusus.",
    "Comments are indented alongside the code, and obvious comments do more harm\nthan good.": "Komentar diindentasi di samping kode, dan komentar yang terlalu jelas lebih bahaya\ndaripada bermanfaat.",
    "Variable names, class names, function names": "Nama variabel, nama kelas, nama fungsi",
    "Also worth referring that there should be no Hungarian notation, and no mix of\nany kinds of notations.": "Patut diingat jangan sampai ada notasi Hungaria, dan campuran dari\nsetiap jenis notasi.",
    "Casting": "Casting",
    "Avoid using <code>as</code> keyword when casting as it might give <code>null</code> as result, which could be easily forgotten to check.": "Hindari penggunaan kata kunci <code>as</code> saat meng-casting karena hal tersebut dapat menyebabkan hasil yang <code>null</code>, yang sangat gampang dilewati saat pengecekan.",
    "Vala namespaces": "Namespace Vala",
    "Referring to GLib is not necessary. If you want to print something:": "Pengacuan pada GLib tidak diperlukan. Jika Anda ingin print sesuatu:",
    "Opt for the second one, it's much cleaner.": "Pilih yang kedua, lebih sederhana.",
    "Columns per line": "Kolom per baris",
    "Ideally, lines should have no more than 80 characters per line, because this\nis the default terminal size. However, as an exception, more characters could\nbe added, because most people have wide-enough monitors nowadays. The hard\nlimit is 120 characters.": "Idealnya, baris harus tidak lebih dari 80 karakter per baris, karena ini\nadalah ukuran bawaan terminal. Namun, sebagai pengecualian, lebih banyak karakter dapat\nditambahkan, karena kebanyakan orang sekarang memiliki monitor yang cukup lebar. Batas\nmaksimal adalah 120 karakter.",
    "GPL Header": "Tajuk GPL",
    "Reporting Bugs": "Pelaporan Kutu",
    "One of the big advantages of being an openly developed project is being able to take part in public bug tracking. However, if you're new to working with public bug tracking, it can be difficult to understand how to report bugs The Right Way™. So let's find out how:": "Salah satu keuntungan menjadikan sebuah proyek terbuka untuk umum adalah dapat memanfaatkan pelacakan kutu publik. Jika Anda belum terbiasa, memahami cara yang benar untuk melaporkan kutu bisa jadi agak sulit. Mari pelajari caranya:",
    "In order to file reports, you must be signed up as a member of Launchpad. If you've been through our <a href=\"/docs/code/getting-started#the-basic-setup\">development guide</a>, you already have this covered.": "Untuk mengirimkan laporan, Anda harus mendaftar sebagai anggota Launchpad. Jika Anda telah membaca <a href=\"/docs/code/getting-started#the-basic-setup\">panduan pengembangan</a> kami, semuanya sudah tersedia. ",
    "Find the &quot;Report a Bug&quot; page for the app in question. Often times you can right-click the app in the dock, select &quot;About&quot;, and then select &quot;Report a Problem&quot;. Otherwise, you can search for the app on Launchpad, select the &quot;Bugs&quot; tab, and then &quot;Report a Bug&quot; on the right side of the page.": "Cari halaman laporan kutu untuk aplikasi yang Anda maksud. Seringkali Anda dapat mengklik-kanan aplikasi di dok, pilih \"Tentang\", lalu pilih \"Laporkan Masalah\". Atau Anda juga dapat mencari halaman aplikasi tersebut di Launchpad, buka tab \"Bugs\", lalu klik \"Report a bug\" di sisi kanan halaman.",
    "When filing a new report, launchpad will automatically check for duplicates. However, it's still a good idea to search the bug list to make sure your report hasn't been filed already. If your report has already been filed by someone else, you can mark the report as affecting you using the link on the top left of the report's page. Only comment on the report if you can provide additional useful information that may help track down the source of the issue. Do not comment things like, &quot;I have this problem too&quot; or &quot;This is a really important issue&quot;.": "Ketika mengirimkan laporan baru, Launchpad akan mengecek laporan duplikat secara otomatis. Carilah kutu Anda di daftar kutu untuk memastikan belum ada yang pernah melaporkannya. Jika kutu Anda sudah pernah dilaporkan, Anda dapat melaporkan bahwa Anda juga mengalami kutu tersebut dengan mengklik tautan di bagian kiri atas halaman laporan. Hanya berikan komentar pada laporan jika Anda dapat memberikan informasi tambahan yang berguna untuk mencari sumber masalah. Jangan beri komentar seperti \"Saya juga mengalaminya\" atau \"Ini adalah masalah yang serius\".",
    "If your report has not already been filed by someone else and you've reached the &quot;Report a Bug&quot; page, type in a summary and description of the issue and select &quot;Submit&quot;. Keep in mind the following information while filing your report:": "Jika kutu Anda belum pernah dilaporkan oleh siapapun dan Anda sudah membuka halaman \"Report a bug\", beri ringkasan dan deskripsi masalah lalu klik \"Submit\". Perhatikan hal-hal berikut ketika melaporkan kutu:",
    "Be Specific In The Summary": "Tuliskan Ringkasan yang Spesifik",
    "This will be the title of the issue in the bug tracker. It's very important to be specific because it makes it much easier for a developer or bug manager to search the issue list and helps avoid duplicate reports. A summary such as &quot;App Crashes&quot; is not good and vague requests like &quot;Increase Performance&quot; are not helpful. A good summary is something like &quot;Notification is not sent when process finishes&quot;.": "Ini akan menjadi judul laporan Anda. Menulis ringkasan laporan yang spesifik sangat penting agar pengembang atau pengelola kutu mudah menemukannya serta membantu menghindari laporan duplikat. Ringkasan seperti \"Aplikasi ngadat\" dan \"Tingkatkan kinerja\" tidaklah baik dan tidak membantu. Ringkasan yang baik adalah yang seperti \"Notifikasi tidak muncul ketika proses selesai\".",
    "Avoid Subjective or Ambiguous Adjectives": "Hindari Kata Sifat yang Rancu atau Subjektif",
    "This may sound like a repeat of the first heading, but it's important when you want someone to confirm your report. Don't say that something is &quot;jarring&quot; or &quot;unintuitive&quot;. Instead describe what happened and contrast it with what you expected to happen. &quot;The panel suddenly appeared instead of being animated in,&quot; describes the problem in a way that is actionable and objective.": "Mungkin ini seperti ulangan poin pertama, tetapi ini sangat penting jika Anda ingin seseorang mengonfirmasi laporan Anda. Jangan katakan \"tidak bagus\" atau \"lemot\" saja. Deskripsikan masalah dengan jelas dan perjelas lagi dengan apa yang mestinya ada. \"Panelnya tiba-tiba muncul, padahal mestinya menghilang,\" cukup menggambarkan masalah dengan jelas dan objektif.",
    "Be Concise, But Explain The Issue": "Jelaskan Masalah Dengan Singkat dan Padat",
    "First of all, it's important to mention that bug reports should be written in English and you should, if possible, watch out for your language and grammar.": "Pertama-tama, laporan kutu harus disampaikan dalam bahasa Inggris. Perhatikan penggunaan kata dan tata bahasa Anda.",
    "The most important thing for a report is that the developer must be able to reproduce the issue. If necessary, include exact numbered steps to reproduce the issue. Include relevant information like your OS version, any modifications you've made to the system (like changing your window manager or kernel), or the version numbers of relevant libraries like Gtk or WebKit. If you're reporting a crash, make sure to <a href=\"https://wiki.debian.org/HowToGetABacktrace\">include a backtrace</a>.": "Hal yang terpenting dalam sebuah laporan kutu adalah bahwa para pengembang harus dapat meniru masalah yang Anda alami. Sertakan langkah-langkah untuk meniru masalah jika perlu. Sertakan juga informasi lain yang relevan seperti nomor versi OS, modifikasi yang telah Anda lakukan pada sistem (seperti mengubah kernel atau window manager), atau nomor versi library-library yang relevan seperti Gtk atau WebKit. Jika Anda hendak melaporkan aplikasi yang ngadat, pastikan untuk menyertakan <a href=\"https://wiki.debian.org/HowToGetABacktrace\">backtrace</a>.",
    "Be Prepared To Provide More Information": "Bersiaplah untuk Memberi Lebih Banyak Informasi",
    "If your report does not contain enough information for the developer to reproduce the issue, it may be marked as &quot;Incomplete&quot;. Oftentimes, a developer will make a comment requesting additional specific information. If you do not provide that information, your report will eventually expire.": "Jika laporan Anda tidak memuat informasi yang cukup untuk pengembang, laporan tersebut dapat diberi tanda \"Incomplete\". Seringkali para pengembang akan meminta informasi tambahan yang lebih spesifik. Jika Anda tidak memberikan informasi tersebut, laporan Anda akan kedaluwarsa.",
    "If you've reported your issue against the wrong app, a developer may mark it as &quot;Invalid&quot;. If the developer knows which app you meant to report against, they may re-assign the issue. However, if they do not you must find the correct app and re-assign the report yourself.": "Jika Anda mengirimkan laporan Anda kepada aplikasi yang salah, para pengembang akan memberinya tanda \"Invalid\". Jika mereka tahu aplikasi yang sebenarnya Anda maksud, mereka dapat memperbaikinya. Tetapi jika tidak, Anda harus memperbaikinya sendiri dengan mengirimkannya kepada aplikasi yang benar.",
    "If you're reporting a &quot;Wishlist&quot; issue, like a feature request, a developer may mark your bug as &quot;Opinion&quot; or &quot;Won't Fix&quot;. Developers are often open to discussion about these kinds of issues, but please do not harass a developer for marking your report this way.": "Jika Anda melaporkan masalah berupa \"Wishlist\", para pengembang mungkin akan memberi tanda \"Opinion\" atau \"Won't Fix\". Mereka biasanya mau bersikap terbuka dengan laporan semacam ini, tetapi tolong jangan ganggu mereka jika laporan Anda diberi tanda demikian.",
    "You Can Get a Bit of Help": "Anda Dapat Memperoleh Sedikit Bantuan",
    "If you're not sure about anything above, you are always welcome to our development IRC channel: #elementary-dev on irc.freenode.net. We might be able to help you track down the actual project where you should report the issue, or perhaps even aid you with any English language issue you might come across. Most developers want to help you make good bug reports.": "Jika Anda tidak yakin tentang apapun di atas, Anda selalu kami terima di saluran pengembangan IRC kami: #elementary-dev di irc.freenode.net. Kami mungkin bisa membantu Anda melacak di seluruh proyek Anda, masalah yang seharusnya Anda laporkan, atau bahkan mungkin membantu membenarkan masalah bahasa Inggris yang akan Anda temui nantinya. Sebagian besar pengembang ingin membantu Anda membuat pelaporan kutu yang baik dan benar.",
    "Don't Confirm Reports for Other People's Apps": "Jangan Konfirmasikan Laporan untuk Aplikasi Orang Lain",
    "If a report affects you, mark it using the link. Do not confrim your own reports. Even if you are 100% sure that you are right, just don't do it. It's not good bug tracker etiquette. A bug manager or developer for the app will confirm the report when they are able to review it.": "Jika Anda menemui kutu seperti yang ada pada sebuah laporan, tandai dengan tautan yang ada. Jangan konfirmasikan laporan Anda sendiri, bahkan jika Anda yakin 100%. Itu bukanlah etika pelaporan kutu yang baik. Para pengembang akan mengonfirmasi laporan jika mereka dapat menemukan masalah yang termuat.",
    "Don't Make &quot;Me Too&quot; Comments": "Jangan Membuat Komentar \"Saya Juga\"",
    "We mentioned this earlier, but it's worth mentioning again. Do not make comments that simply say &quot;This issue affects me as well&quot;. This clutters up the tracker. Only comment if you are providing additional information that helps find the source of the issue. If you only want to let a developer know that you are affected, use the green link that says, &quot;Does this bug affect you?&quot; under the report's title.": "Kami sudah menjelaskannya di awal, tetapi ini penting untuk kami jelaskan lagi. Jangan beri komentar yang hanya berisi \"Saya juga menemui masalah ini\". Ini dapat mengacaukan pelacak. Hanya beri komentar yang berisi informasi tambahan yang berguna. Jika Anda hanya ingin para pengembang tahu bahwa Anda juga menemui masalah tersebut, gunakan tautan \"Does this bug affect you?\" di bawah judul laporan.",
    "Proposing Design Changes": "Pengajuan Perubahan Desain",
    "elementary has always been known for its strong focus on great design, but if you’re an up and coming designer you might not know how to get developers to pay attention to you. This reference guide is about how to effectively propose a design change in a way that makes it more likely for your design to become implemented.": "elementary sudah lama terkenal sebagai OS yang fokus kepada desain, tapi kalau kamu masih baru dengan dunia desain mungkin kamu belum tahu bagaimana caranya untuk memberikan masukan untuk para developer. Panduan referensi ini dibuat agar kamu bisa secara efektif mengajukan saran perubahan desain supaya desainmu lebih mungkin digunakan.",
    "Don't Make Demands": "Jangan membuat permintaan.",
    "Let’s say you spent the last few hours re-designing the Search Engine Manager dialog in Midori and you want to bring this work to the attention of Midori’s developers. You could file a bug report something like “Search engine popup sucks” and paste your mockup and be done. But that approach isn’t going to win you any friends and your report will probably be marked “opinion” or “invalid”. Instead, we should consider the amount of work it will take to implement the new design and try to present it in a way that gets developers excited about the overall vision without demanding 1,000 lines of code in one shot.": "Mari katakan Anda telah menghabiskan beberapa jam untuk mendesain ulang kotak dialog Search Engine Manager di Midori dan Anda ingin menunjukkan karya tersebut ke developer Midori. Anda dapat mengumpulkan laporan kutu seperti \"Search engine popup sucks\" dan tempelkan karya tiruan Anda dan selesai. Tapi hal seperti ini tidak akan mendatangkan teman ke Anda dan mungkin laporan Anda akan ditandai sebagai \"Opini\" atau \"Tidak Sah\". Lebih baik, pertimbangkan berapa banyak pekerjaan yang dibutuhkan untuk mengimplementasikan desain baru dan coba untuk menampilkannya dengan cara yang dapat membuat developer gembira tanpa berharap 1000 baris kode dalam satu singkat.",
    "Use Blueprints": "Gunakan Rancangan",
    "Firstly, we want to present the overall vision of our grand new design. So we should file a new blueprint (in this example, we’d file it <a href=\"http://blueprints.launchpad.net/midori\">here</a>). Name it something explicit and try to avoid titles that marginalize developer’s existing work. Something like “search-engine-manager-redesign” works just fine. In this blueprint we want to describe our motivations for the redesign. What are the problems with the current design and what does our new design aim to solve? Common reasons for a redesign can include minimizing window chrome, taking advantage of new toolkit elements, making the UI more consistent with other apps, etc. This is also a good place to link to that mockup we were talking about earlier. If your design is really involved, you can even link to an external specification (Google Docs work great for getting feedback) where you have a chance to really get into the nitty gritty of your idea.": "Pertama-tama, kita akan menjelaskan visi besar desain baru kita. Jadi kita perlu mengajukan cetak biru yang baru (pada contoh ini, kita akan mengajukannya ke <a href=\"http://blueprints.launchpad.net/midori\">sini</a>. Beri judul yang jelas serta hindari kata-kata yang menyudutkan hasil pekerjaan yang sudah ada. Judul \"search-engine-manager-redesign\" tidak masalah. Pada cetak biru ini kita perlu menjelaskan motivasi di balik desain kita. Apa masalah yang ada pada desain yang sekarang yang dapat diatasi oleh desain baru kita? Alasan umum pengajuan desain ulang termasuk memanfaatkan elemen toolkit baru, membuat antarmuka lebih konsisten dengan aplikasi lain, dll. Ini juga menjadi tempat yang baik untuk menunjukkan model <i>mockup</i> yang telah kita bahas. Jika desain anda cukup rumit, anda dapat mencantumkan tautan ke tempat anda dapat menjelaskan gambaran desain anda dengan baik (Google Docs cukup baik untuk menerima tanggapan).",
    "Create Concise Work Items": "Buatlah item kerja yang ringkas.",
    "Now that you’ve laid out the motivations for your design and explained the overall vision, you should break it up into small, actionable work items (also called bug reports). To continue our example, I would have reports like “Change Search Engine Manager Dialog to Popover”, “Re-order Search Engines with Drag and Drop”, “Open Search Engine Manager by clicking Search icon in URL Bar”, “Show edit and remove buttons next to engine in Search Engine Manager”, etc etc. Each bug report should describe just one small change. We do this for several reasons:": "Sekarang anda telah dimotivasi untuk desain anda dan dijelaskan keseluruhan visi, anda harus membaginya menjadi beberapa item kecil, item pekerjaan untuk ditindaklanjuti (juga disebut laporan bug). Untuk melanjutkan contoh kita, saya akan membuat laporan seperti \"Perubahan Jendela Pengelola Mesin Pencari ke Popover\", \"Susun Ulang Mesin Pencari dengan Seret dan Jatuhkan\", \"Buka Pengelola Mesin Pencari dengan mengklik ikon Cari di URL Bar\", \"Tampilkan mengedit dan menghapus tombol di sebelah mesin di Pengelola Mesin Pencari\", dan lain lain. Setiap laporan bug harus menjelaskan hanya satu perubahan kecil. Kami melakukan ini karena beberapa alasan:",
    "It allows developers to deny one request without denying all of them. Face it: your design isn’t perfect and it’s very possible that a developer isn’t going to like part of it. By breaking up your design into little pieces, it allows a developer to incorporate the changes they like and ignore the ones they don’t.": "Hal ini memungkinkan pengembang untuk menolak satu permintaan tanpa menyangkal mereka semua. Hadapilah: desain anda tidak sempurna dan itu sangat mungkin bahwa pengembang tidak akan menyukai bagian dari itu. Dengan membagi desain anda menjadi bagian-bagian kecil, memungkinkan pengembang untuk menggabungkan perubahan yang mereka sukai dan mengabaikan yang mereka tidak.",
    "It makes your design less intimidating. A big redesign means lots of lines of code. If your changes look like too much of a hassle, you’re going to have a hard time getting a developer to work on them. But if you present small changes that can be incorporated a bit at a time, there’s a bigger chance that your whole design will eventually be implemented.": "Itu membuat desain anda tidak menakutkan. Sebuah desain ulang besar berarti banyak baris kode. Jika perubahan anda terlihat seperti terlalu banyak kerumitan, anda akan memiliki waktu yang sulit mendapatkan pengembang untuk mengerjakannya. Tetapi jika anda menghadirkan perubahan kecil yang dapat dimasukkan sedikit pada suatu waktu, ada kesempatan besar untuk melaksanakan seluruh desain anda pada akhirnya.",
    "It allows developers to track their progress. Once again, big designs take time to implement. Even if a developer wants to implement the whole thing right away, they might not be able to. Giving them a way to “check off” pieces as they go makes it more likely that a part of your design won’t be forgotten about when it’s translated into code.": "Hal ini memungkinkan pengembang untuk melacak kemajuan mereka. Sekali lagi, desain besar membutuhkan waktu untuk menerapkan. Bahkan jika pengembang ingin menerapkan semuanya segera, mereka mungkin tidak dapat. Memberikan mereka cara untuk \"memeriksa\" bagian mereka dimanapun membuatnya lebih mungkin bahwa bagian dari desain Anda tidak akan dilupakan saat itu diterjemahkan ke dalam kode.",
    "File Compelling Reports": "Laporan Penarikan Berkas",
    "Don’t forget to make your reports compelling. It’s up to you to sell the merits of each change. Cite the HIG, prior-art, user complaints, articles by other designers, and present your changes in a logical, non-opinionated, and concise manner. It also doesn’t hurt to speak in developer terms. Brush up on the names of widgets in Gtk and Granite, get familiar with available libraries like Zeitgeist and Unity, and don’t forget about system components like PulseAudio or Contractor. Also, whatever you do, don’t be presumptuous and confirm your own bug reports. You wouldn’t ask a friend for a favor and then answer yourself for them, so don’t do it here either. See <a href=\"#reporting-bugs\">the above section</a> for a refresher on filing good bug reports.": "Jangan lupa untuk membuat laporan anda menarik. Terserah anda untuk memanfaatkan dari setiap perubahan. Mengutip HIG, seni sebelumnya, keluhan pengguna, artikel oleh desainer lain, dan menyajikan perubahan dalam cara yang logis, non-dogmatis, dan ringkas. Ini juga tidak ada salahnya untuk berbicara dalam bahasa pengembang. Memoles nama widget di Gtk dan Granit, terbiasa dengan pustaka yang tersedia seperti Zeitgeist dan Unity, dan jangan lupa tentang komponen sistem seperti PulseAudio atau Contractor. Juga, apa pun yang anda lakukan, jangan sombong dan mengkonfirmasi laporan bug anda sendiri. Anda tidak akan meminta teman untuk kebaikan dan kemudian menjawab sendiri bagi mereka, jadi jangan melakukan hal itu di sini. Lihat <a href=\"#reporting-bugs\"> bagian atas </a> untuk penyegaran pada pengajuan laporan bug yang baik.",
    "Be Prepared to Iterate": "Bersiap-siaplah untuk mengulang pekerjaan Anda.",
    "Don’t be upset if a developer plainly states that they don’t want to implement your idea. Remember that they have plans too. You might have to go back to the drawing board a bit. Listen to their feedback. Your design might be a little over-engineered, it might conflict with other designs being worked on, or maybe it’s just in conflict with the goals and scope of the app. Remember that you’re in the position of requesting someone to devote their time to something. You’re asking for a favor. Don’t be afraid to argue a position within polite reason, but remember to stay humble.": "Jangan marah jika pengembang mengatakan mereka tidak mau mengimplementasikan ide Anda. Ingat, mereka juga punya rencana. Anda mungkin perlu merevisi ide Anda. Mendengarkan masukkan mereka. Desain Anda mungkin agak terlalu berlebihan, dan tidak sejalan dengan desain lain yang sedang dikerjakan, atau mungkin tidak sejalan dengan tujuan dan cakupan aplikasi. Ingat, Anda berada dalam posisi meminta seseorang mendedikasikan waktunya pada sesuatu. Anda meminta tolong. Jangan ragu untuk berargumentasi dengan sopan, tapi ingatlah untuk tetap rendah hati. "
}