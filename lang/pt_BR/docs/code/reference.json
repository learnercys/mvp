{
    "Reference": "Referência",
    "Now that you've stepped through the developer guide like a champ, we have some reference materials for you. This would be a great place to bookmark and refer back to when you have questions about elementary development.": "Agora que você já passou pela guia do desenvolvedor como um campeão, temos alguns conteúdos de referência para você. Estes são ótimos lugares para guardar nos favoritos e relembrar quando você tiver dúvidas sobre o desenvolvimento no elementary.",
    "Code Style": "Estilo de Código",
    "The purpose of this guide is to provide clean and accurate instructions on\nwriting good code across all elementary projects. This guideline is to be\nfollowed on every file, in order to keep our code consistent and readable. We\nare also inheriting some of the GNOME's Vala guidelines to keep our code\nconsistent with other Vala programs.": "O propósito deste Guia é fornecer de maneira limpa e precisa instruções \nde como escrever um bom código por todos os projetos elementary. Esta diretriz deve ser\nseguida em cada arquivo, na ordem para manter nosso código consistente e legível. Nós\ntambém estamos herdando algumas diretrizes do GNOME's Vala para manter nosso código\nconsistente com outros programas Vala.",
    "If the guidelines here proposed are followed, newcomers to elementary\ndevelopment will be more easily able to join the development and\nunderstand code. Besides, it'll make it easier for all developers to work on\napplications that they don't usually work on, because the code will be\nconsistent. Finally, as Guido Van Rossum said - &quot;Code is much more often read\nthan written&quot;, so having nicely written code is crucial.": "Se os guias aqui propostos forem seguidos, recém-chegados ao desenvolvimento do elementary terão mais facilidade em desenvolver e entender o código. Além disso, será mais fácil para desenvolvedores trabalharem em aplicativos que eles não utilizam costumeiramente, porque o código será consistente. Finalmente, como Guido Van Rossum disse - \"Código é muito mais frequentemente lido do que escrito\", portanto ter código bem escrito é crucial.",
    "Whitespace": "Espaço",
    "There is no trailing whitespace at the end of a line, whether it's empty or\nnot. There is also no empty line after declaring a function:": "Não há espaço em branco no fim da linha, independende se esteja vazia ou\nnão. Também não há linha em branco após a declaração de uma função:",
    "White space comes before opening parentheses:": "Espaço em branco vem antes de abrir o parênteses",
    "Whitespace goes in all maths-related code, between numbers and operators.": "Espaço em branco vai em todo código matemático, entre números e operadores.",
    "Indentation": "Indentação",
    "Vala code is indented using 4 spaces for consistency and readability.": "Código em Vala é indentado usando 4 espaços para haver consintência e legibilidade.",
    "In classes, functions, loops and general flow control, the first parentheses\nis on the end of the first line (&quot;One True Brace Style&quot;), followed by the\nindented code, and a line closing the function with a curly bracket:": "Nas classes, funções, loops e controles de fluxo em geral, o primeiro parêntesis\nfica no fim da primeira linha (conhecido como \"One True Brace Style\"), seguido pelo\ncódigo identado, e uma linha fechando a função com uma chave:",
    "On conditionals and loops, always use braces even if there's only one line of code:": "Em condicionais e loops, sempre use chaves mesmo que haja apenas uma linha de código:",
    "Cuddled else and else if:": "Else e else if aninhados:",
    "If you are checking the same variable more than twice, use switch/case instead of multiple else/if:": "Se você está verificando a mesma variável mais de duas vezes, use switch/case ao invés de múltiplos else/if:",
    "Classes and files": "Classes e arquivos",
    "Only having one class per file is recommended.": "É recomendado ter apenas uma classe por arquivo.",
    "All files have the same name of the class in them.": "Todos os arquivos têm o mesmo nome da classe em si.",
    "Separate code into classes for easier extensibility.": "Separe o código em classes para facilitar a extensibilidade.",
    "Comments": "Comentários",
    "Comments are either on the same line as the code or in a special line.": "Comentários estão ambos na mesma linha que o código, ou em uma linha especial.",
    "Comments are indented alongside the code, and obvious comments do more harm\nthan good.": "Comentários são desejados no código, e comentários óbvios atrapalham mais que ajudam.",
    "Variable names, class names, function names": "Nomes de variáveis, classes e funções",
    "Also worth referring that there should be no Hungarian notation, and no mix of\nany kinds of notations.": "Vale ressaltar que não devem haver Notações húngaras, nem misturas de\nnotações de qualquer tipo.",
    "Casting": "Casting",
    "Avoid using <code>as</code> keyword when casting as it might give <code>null</code> as result, which could be easily forgotten to check.": "Evite usar <code>como</ code> palavra-chave quando se pergunta como poderia dar <code>nulo</ code> como resultado, que poderia ser facilmente esquecido de verificar.",
    "Vala namespaces": "Namespaces Vala",
    "Referring to GLib is not necessary. If you want to print something:": "Referênciar a GLib não é necessário. Se você quer imprimir algo:",
    "Opt for the second one, it's much cleaner.": "Escolha o segundo, é muito mais limpo.",
    "Columns per line": "Colunas por linha",
    "Ideally, lines should have no more than 80 characters per line, because this\nis the default terminal size. However, as an exception, more characters could\nbe added, because most people have wide-enough monitors nowadays. The hard\nlimit is 120 characters.": "Idealmente, linhas não deveriam conter mais de 80 caracteres, porque este é o tamanho padrão do terminal. Entretanto, como excessão, mais caracteres podem ser adicionados, porque recentemente a maioria das pessoas têm monitores largos o bastante. O limite extremo é de 120 caracteres.",
    "GPL Header": "Cabeçalho GPL",
    "Reporting Bugs": "Reportando Bugs",
    "One of the big advantages of being an openly developed project is being able to take part in public bug tracking. However, if you're new to working with public bug tracking, it can be difficult to understand how to report bugs The Right Way™. So let's find out how:": "Uma das grandes vantagens de ser um projeto desenvolvido abertamente é ser capaz de participar de rastreamentos de bugs públicos. Entretanto, se você é novo nesse tipo de sistema, pode ser difícil de entender como reportar bugs do jeito Certo. Vamos descobrir como:",
    "In order to file reports, you must be signed up as a member of Launchpad. If you've been through our <a href=\"/docs/code/getting-started#the-basic-setup\">development guide</a>, you already have this covered.": "Para reportar um erro, você precisa estar inscrito na Launchpad. Se você já passou pelo <a href=\"/docs/code/getting-started#the-basic-setup\">guia de desenvolvimento</a>, isso já está pronto.",
    "Find the &quot;Report a Bug&quot; page for the app in question. Often times you can right-click the app in the dock, select &quot;About&quot;, and then select &quot;Report a Problem&quot;. Otherwise, you can search for the app on Launchpad, select the &quot;Bugs&quot; tab, and then &quot;Report a Bug&quot; on the right side of the page.": "Encontre a página \"Reportar um Erro\" para o aplicativo em questão. Muitas vezes você pode clicar com o botão direito do mouse no dock do aplicativo, selecione \"Sobre\", e, em seguida, selecione \"Informar um problema\". Outra maneira é você pode procurar pelo aplicativo no Launchpad, selecione a guia \"Erros\", e depois \"Reportar um Erro\" no lado direito da página.",
    "When filing a new report, launchpad will automatically check for duplicates. However, it's still a good idea to search the bug list to make sure your report hasn't been filed already. If your report has already been filed by someone else, you can mark the report as affecting you using the link on the top left of the report's page. Only comment on the report if you can provide additional useful information that may help track down the source of the issue. Do not comment things like, &quot;I have this problem too&quot; or &quot;This is a really important issue&quot;.": "Quando preenchendo um novo relatório, a barra de ativação vai procurar por duplicatas automaticamente. Porém, ainda é uma boa ideia procurar na lista de bugs pra ter certeza de que  seu relatório ainda não foi preenchido. Se o seu relatório já foi preenchido por outra pessoa, você pode marcar o relatório como afetando você usando o link no topo esquerdo da página de relatórios. Somente comente no em um relatório se você pode prover informações últeis adicionais que possam ajudar a rastrear a fonte do problema. Não comente coisas do tipo, \"Eu tenho esse problema também\" ou \"Isso é um problema muito importante\".",
    "If your report has not already been filed by someone else and you've reached the &quot;Report a Bug&quot; page, type in a summary and description of the issue and select &quot;Submit&quot;. Keep in mind the following information while filing your report:": "Se o seu relatório já não está arquivado por alguém e você chegou à página \"Reportar um Erro\", digite um resumo e uma descrição do problema e selecione \"Enviar\". Tenha em mente as seguintes informações enquanto faz o seu relatório:",
    "Be Specific In The Summary": "Seja Específico No Sumário",
    "This will be the title of the issue in the bug tracker. It's very important to be specific because it makes it much easier for a developer or bug manager to search the issue list and helps avoid duplicate reports. A summary such as &quot;App Crashes&quot; is not good and vague requests like &quot;Increase Performance&quot; are not helpful. A good summary is something like &quot;Notification is not sent when process finishes&quot;.": "Esse será o título do problema no bug tracker. É muito importante ser específico porque será mais fácil para um desenvolvedor ou um gerente de bugs pesquisar o problema e ajuda a evitar relatórios repetidos. Um título como \"Aplicativo travou\" não é bom e pedidos vagos como \"Aumente a performace\" não são úteis. Um bom título é algo como \"Notificações não são enviadas quando o processo termina\".",
    "Avoid Subjective or Ambiguous Adjectives": "Evite Adjetivos Subjetivos ou Ambíguos",
    "This may sound like a repeat of the first heading, but it's important when you want someone to confirm your report. Don't say that something is &quot;jarring&quot; or &quot;unintuitive&quot;. Instead describe what happened and contrast it with what you expected to happen. &quot;The panel suddenly appeared instead of being animated in,&quot; describes the problem in a way that is actionable and objective.": "Isto pode soar como uma repetição do título, mas é importante quando você quer alguém para confirmar o seu relatório. Não diga que algo é \"discordante\" ou \"não intuitivo\". Em vez disso, descreva o que aconteceu e compare com o que você espera que aconteça. \"O painel apareceu de repente em vez de ser animado\", descreva o problema de uma forma argumentável e objetiva.",
    "Be Concise, But Explain The Issue": "Seja Conciso, Mas Explique o Problema",
    "First of all, it's important to mention that bug reports should be written in English and you should, if possible, watch out for your language and grammar.": "Primeiro de tudo, é importante mencionar que os relatórios de bugs devem ser escrito em Inglês e você deve, se possível, prestar atenção para a sua linguagem e gramática.",
    "The most important thing for a report is that the developer must be able to reproduce the issue. If necessary, include exact numbered steps to reproduce the issue. Include relevant information like your OS version, any modifications you've made to the system (like changing your window manager or kernel), or the version numbers of relevant libraries like Gtk or WebKit. If you're reporting a crash, make sure to <a href=\"https://wiki.debian.org/HowToGetABacktrace\">include a backtrace</a>.": "O mais importante num relatório é que o desenvolvedor consiga reproduzir o problema. Se necessário, enumere exatamente os passos para reproduzir o problema. Inclua informações relevantes como a versão do seu sistema operacional, qualquer modificações que você tenha feito no sistema (como mudar o gerenciador de janelas ou kernel), ou a versão de bibliotecas relevantes como Gtk ou WebKit. Se você está relatando um travamento de programa, tenha certeza de <a href=\"https://wiki.debian.org/HowToGetABacktrace\">incluir um backtrace</a>.",
    "Be Prepared To Provide More Information": "Esteja Pronto Para Fornecer Mais Informações",
    "If your report does not contain enough information for the developer to reproduce the issue, it may be marked as &quot;Incomplete&quot;. Oftentimes, a developer will make a comment requesting additional specific information. If you do not provide that information, your report will eventually expire.": "Se o seu relatório não contém informações suficientes para que o desenvolvedor possa reproduzir o problema, ele pode ser marcado como \"incompleto\". Muitas vezes, um desenvolvedor irá fazer um comentário e solicitar informações adicionais específicas. Se você não fornecer essa informação, o seu relatório acabará por expirar.",
    "If you've reported your issue against the wrong app, a developer may mark it as &quot;Invalid&quot;. If the developer knows which app you meant to report against, they may re-assign the issue. However, if they do not you must find the correct app and re-assign the report yourself.": "Se um relatório é reprtado no aplicativo errado, um desenvolvedor poderá marcá-lo como \"Inválido\". Caso o desenvolvedor saiba o aplicativo no qual você quis reportar um erro, ele pode reatribuír o problema ao aplicativo correto. No entanto, caso ele não souber, você deverá encontrar o aplicativo correto e reatribuír o erro.",
    "If you're reporting a &quot;Wishlist&quot; issue, like a feature request, a developer may mark your bug as &quot;Opinion&quot; or &quot;Won't Fix&quot;. Developers are often open to discussion about these kinds of issues, but please do not harass a developer for marking your report this way.": "Se você está relatando uma questão na \"Lista de Desejos\", como um pedido de recurso, um desenvolvedor pode marcar o seu erro como \"Opinião\" ou \"Não irá Corrigir\". Desenvolvedores são frequentemente abertos à discussão sobre esses tipos de questões, mas por favor não incomodar um desenvolvedor para marcar seu relatório desta forma.",
    "You Can Get a Bit of Help": "Você Pode Conseguir um Pouco de Ajuda",
    "If you're not sure about anything above, you are always welcome to our development IRC channel: #elementary-dev on irc.freenode.net. We might be able to help you track down the actual project where you should report the issue, or perhaps even aid you with any English language issue you might come across. Most developers want to help you make good bug reports.": "Se estiver em dúvida sobre qualquer coisa, você é sempre bem vindo ao nosso canal de desenvolvimento no IRC: #elementary-dev em irc.freenode.net. Nós poderemos te ajudar a encontrar o projeto correto para relatar o problema, ou talvez auxiliar com qualquer dúvida de Inglês que você possa ter. A maioria dos desenvolvedores querem te ajudar a fazer bons relatórios de erros.",
    "Don't Confirm Reports for Other People's Apps": "Não Confirme Relatórios para Aplicativos de Outras Pessoas",
    "If a report affects you, mark it using the link. Do not confrim your own reports. Even if you are 100% sure that you are right, just don't do it. It's not good bug tracker etiquette. A bug manager or developer for the app will confirm the report when they are able to review it.": "Se um relatório afeta você, marque-o usando o link. Não confirme relatórios por conta própria. Mesmo se você está 100% certo de que você tem razão, apenas não faça. Isso não é boa prática de rastreaio de erro. Um gerente de erro ou o desenvolvedor para o aplicativo irão confirmar o relatório quando eles forem capazes de analisá-lo.",
    "Don't Make &quot;Me Too&quot; Comments": "Não Faça Comentários \"Eu também\"",
    "We mentioned this earlier, but it's worth mentioning again. Do not make comments that simply say &quot;This issue affects me as well&quot;. This clutters up the tracker. Only comment if you are providing additional information that helps find the source of the issue. If you only want to let a developer know that you are affected, use the green link that says, &quot;Does this bug affect you?&quot; under the report's title.": "Nós mencionamos isso antes, mas vale a pena mencionar novamente. Não faça comentários que simplesmente digam \"Esse problema também me afeta\". Isso atrapalha o rastreador. Comente somente se você estiver fornecendo informações adicionais que ajudarão a encontrar a origem do problema. Se você só quer deixar um desenvolvedor saber que você é afetado, use o link verde que diz: \"Será que este erro afeta você?\" sob o título do relatório.",
    "Proposing Design Changes": "Propondo Alterações de Design",
    "elementary has always been known for its strong focus on great design, but if you’re an up and coming designer you might not know how to get developers to pay attention to you. This reference guide is about how to effectively propose a design change in a way that makes it more likely for your design to become implemented.": "elementary sempre foi conhecida por sua forte ênfase no design, mas se você é um designer esperançoso e você pode não saber como chamar a atenção dos desenvolvedores para você. Este guia de referência é sobre como efetivamente propor uma alteração de design de uma forma que torna mais provável que seu design para seja implementado.",
    "Don't Make Demands": "Não Faça Exigências",
    "Let’s say you spent the last few hours re-designing the Search Engine Manager dialog in Midori and you want to bring this work to the attention of Midori’s developers. You could file a bug report something like “Search engine popup sucks” and paste your mockup and be done. But that approach isn’t going to win you any friends and your report will probably be marked “opinion” or “invalid”. Instead, we should consider the amount of work it will take to implement the new design and try to present it in a way that gets developers excited about the overall vision without demanding 1,000 lines of code in one shot.": "Digamos que você investiu algumas horas remodelando a janela do Gerenciador de Mecanismos de Busca no Midori e queira mostrar para os desenvolvedores do Midori. Você poderia criar um relatório tipo \"A pop-up de mecanismos de busca é uma droga\", colar o seu mockup e pronto. Porém essa abordagem não vai te trazer muitos amigos e o seu relatório vai provavelmente ser marcado como \"opinião\" ou \"inválido\". Ao invés disso, devemos considerar a quantidade de trabalho necessários para implementar o novo modelo e tentar apresentá-lo de uma maneira que anime os desenvolvedores com a ideia sem exigir 1.000 linhas de código logo de cara.",
    "Use Blueprints": "Use Blueprints",
    "Firstly, we want to present the overall vision of our grand new design. So we should file a new blueprint (in this example, we’d file it <a href=\"http://blueprints.launchpad.net/midori\">here</a>). Name it something explicit and try to avoid titles that marginalize developer’s existing work. Something like “search-engine-manager-redesign” works just fine. In this blueprint we want to describe our motivations for the redesign. What are the problems with the current design and what does our new design aim to solve? Common reasons for a redesign can include minimizing window chrome, taking advantage of new toolkit elements, making the UI more consistent with other apps, etc. This is also a good place to link to that mockup we were talking about earlier. If your design is really involved, you can even link to an external specification (Google Docs work great for getting feedback) where you have a chance to really get into the nitty gritty of your idea.": "Primeiramente, queremos apresentar a visão geral do nosso novo modelo. Então devemos criar um novo blueprint (nesse exemplo, criaríamos ele <a href=\"http://blueprints.launchpad.net/midori\">aqui</a>). Nomeamos ele de maneira explícita e tentando evitar títulos que denigram o trabalho existente dos desenvolvedores. Algo como \"search-engine-manager-redesign\" funciona bem. Quais os problemas do modelo atual e o que o nosso novo modelo tenta resolver? Razões comuns para uma remodelagem podem incluir diminuir a borda da janela, tirar vantagem de novos elementos de interface, tornar a UI mais consistente com outros apps, etc. Também é um ótimo local para colocar um link para o mockup que falamos antes. Se o seu modelo é realmente envolvedor,  você pode por um link para uma especificação externa (Google Docs é ótimo para receber opiniões) onde você tem a chance de chegar ao âmago da sua ideia.",
    "Create Concise Work Items": "Criar Itens de Trabalho Consisos",
    "Now that you’ve laid out the motivations for your design and explained the overall vision, you should break it up into small, actionable work items (also called bug reports). To continue our example, I would have reports like “Change Search Engine Manager Dialog to Popover”, “Re-order Search Engines with Drag and Drop”, “Open Search Engine Manager by clicking Search icon in URL Bar”, “Show edit and remove buttons next to engine in Search Engine Manager”, etc etc. Each bug report should describe just one small change. We do this for several reasons:": "Agora que você apresentou as motivações para o seu design e explicou a visão geral, você deve quebrá-lo em pequenos itens de trabalho (também chamados de \"bug reports\"). Continuando nosso exemplo, eu faria reports tipo \"Mudar Diálogo de Gerenciador de Mecanismos de Busca para Popover\", \"Reordenar Mecanismos com Arrastar e Soltar\", Abrir Gerenciador de Mecanismos de Busca ao clicar no ícone de Busca na Barra de Endereços\", \"Mostrar botões de editar e remover perto do mecanismo no Gerenciador de Mecanismo de Busca\", etc etc. Cada bug report deve descrever apenas uma pequena mudança. Fazemos isso por diversas razões:",
    "It allows developers to deny one request without denying all of them. Face it: your design isn’t perfect and it’s very possible that a developer isn’t going to like part of it. By breaking up your design into little pieces, it allows a developer to incorporate the changes they like and ignore the ones they don’t.": "Isso permite os desenvolvedores negarem um pedido sem negar todos eles. Entenda: seu design não é perfeito e é bem possível que um desenvolvedor não goste de uma parte dele. Dividindo o design em pedacinhos permite que o desenvolvedor incorpore as mudanças que ele goste e ignore as que ele não goste.",
    "It makes your design less intimidating. A big redesign means lots of lines of code. If your changes look like too much of a hassle, you’re going to have a hard time getting a developer to work on them. But if you present small changes that can be incorporated a bit at a time, there’s a bigger chance that your whole design will eventually be implemented.": "Isso torna o seu design menos intimidador. Uma grande remodelagem significa muitas linhas de código. Se suas mudanças parecerem muito trabalhosas, você vai ter dificuldade em fazer um desenvolvedor trabalhar nelas. Mas se você apresentar pequenas mudanças que possam ser incorporadas gradualmente, há uma chance maior que o seu design como um todos será implementado eventualmente.",
    "It allows developers to track their progress. Once again, big designs take time to implement. Even if a developer wants to implement the whole thing right away, they might not be able to. Giving them a way to “check off” pieces as they go makes it more likely that a part of your design won’t be forgotten about when it’s translated into code.": "Isso permite os desenvolvedores monitores o progresso deles. Novamente, grandes designs levam tempo para implementar. Mesmo que um desenvolvedor queira implementar a coisa toda, pode ser que ele não consiga. Dar a eles um jeito de \"marcar\" pedaços à medida que forem feitos torna mais provável que uma parte do seu design não vai ser esquecida quando for traduzida em código.",
    "File Compelling Reports": "Apresente Relatórios Convincentes",
    "Don’t forget to make your reports compelling. It’s up to you to sell the merits of each change. Cite the HIG, prior-art, user complaints, articles by other designers, and present your changes in a logical, non-opinionated, and concise manner. It also doesn’t hurt to speak in developer terms. Brush up on the names of widgets in Gtk and Granite, get familiar with available libraries like Zeitgeist and Unity, and don’t forget about system components like PulseAudio or Contractor. Also, whatever you do, don’t be presumptuous and confirm your own bug reports. You wouldn’t ask a friend for a favor and then answer yourself for them, so don’t do it here either. See <a href=\"#reporting-bugs\">the above section</a> for a refresher on filing good bug reports.": "Não se esqueça de fazer seus relatórios convincentes. Cabe a você a vender os méritos de cada mudança. Cite a HIG, prior-art, reclamações de usuários, artigos de outros designers, e apresentar as suas alterações de uma maneira lógica, não opinativa, e concisa. Também não faz mal para falar em termos de desenvolvedor. Revisar os nomes dos widgets no Gtk e Granite, se familiarizar com bibliotecas disponíveis, como Zeitgeist e Unity, e não se esqueça dos componentes do sistema como PulseAudio ou Contractor. Além disso, tudo o que você faz, não seja presunçoso e confirme seus próprios relatórios de erros. Você não iria pedir um favor a um amigo e, em seguida, responder a si mesmo por eles, por isso não faça aqui também. Consulte <a href=\"#reporting-bugs\">seção acima</a> para uma reciclagem sobre a apresentação de bons relatórios de erros.",
    "Be Prepared to Iterate": "Esteja Preparado para Interagir",
    "Don’t be upset if a developer plainly states that they don’t want to implement your idea. Remember that they have plans too. You might have to go back to the drawing board a bit. Listen to their feedback. Your design might be a little over-engineered, it might conflict with other designs being worked on, or maybe it’s just in conflict with the goals and scope of the app. Remember that you’re in the position of requesting someone to devote their time to something. You’re asking for a favor. Don’t be afraid to argue a position within polite reason, but remember to stay humble.": "Não fique chateado se um desenvolvedor afirmar claramente que eles não querem implementar sua ideia. Lembre-se que eles também tem planos. Você pode ter que voltar à prancheta de desenho um pouco. Ouvir seus comentários. Seu projeto pode ser um pouco mais de engenharia, pode entrar em conflito com outros projetos sendo trabalhados, ou talvez seja apenas conflito com os objetivos e escopo do aplicativo. Lembre-se que você está na posição de pedir alguém para dedicar seu tempo para alguma coisa. Você está pedindo um favor. Não tenha medo de discutir uma posição dentro da razão  e delicadeza, mas lembre-se de permanecer humilde."
}