{
    "Reference": "Referências",
    "Now that you've stepped through the developer guide like a champ, we have some reference materials for you. This would be a great place to bookmark and refer back to when you have questions about elementary development.": "Agora que já dominas a arte de programar como um campeão, deixamos-te alguns materiais de referência para consulta. Podes adicionar esta página aos teus favoritos do browser para quando tiveres questões sobre o desenvolvimento para o elementary.",
    "Code Style": "Estilo de código.",
    "The purpose of this guide is to provide clean and accurate instructions on\nwriting good code across all elementary projects. This guideline is to be\nfollowed on every file, in order to keep our code consistent and readable. We\nare also inheriting some of the GNOME's Vala guidelines to keep our code\nconsistent with other Vala programs.": "O propósito deste guia é dar-te umas linhas mestras claras e precisas de como deves escrever e arrumar o teu código nos projetos para o elementary. Este guia deve ser seguido em todos os ficheiros, para manter o código consistente e legível. Estamos também a herdar algumas linhas mestras do Vala do GNOME, para manter o nosso código consistente com outros programas em Vala.",
    "If the guidelines here proposed are followed, newcomers to elementary\ndevelopment will be more easily able to join the development and\nunderstand code. Besides, it'll make it easier for all developers to work on\napplications that they don't usually work on, because the code will be\nconsistent. Finally, as Guido Van Rossum said - &quot;Code is much more often read\nthan written&quot;, so having nicely written code is crucial.": "Se as guidelines propostas forem seguidas, os programadores novatos conseguirão mais facilmente juntar-se ao nosso grupo de developers e perceber o código dos outros. Além disso, vai tornar mais fácil o trabalho colaborativo em apps que não são originalmente as suas, dado a consistência do código. Finalmente tal como Guido Van Rossum disse- \"O código é lido mais vezes do que escrito\", por isso ter um código apresentável é crucial.",
    "Whitespace": "Espaço em branco",
    "There is no trailing whitespace at the end of a line, whether it's empty or\nnot. There is also no empty line after declaring a function:": "Não se usa um espaço em branco no fim de cada linha, quer esteja vazia ou não. Também não se deixa uma linha em branco depois de declarar uma função:",
    "White space comes before opening parentheses:": "Deves usar um espaço em branco sempre antes de abrir parentisis.",
    "Whitespace goes in all maths-related code, between numbers and operators.": "Espaço em branco deve ser acrescentado em todo o código relacionado com operações matemáticas, entre os números e os operadores.",
    "Indentation": "Indentação",
    "Vala code is indented using 4 spaces for consistency and readability.": "Código em Vala é indentado usando 4 espaços, para consistência e fácil leitura.",
    "In classes, functions, loops and general flow control, the first parentheses\nis on the end of the first line (&quot;One True Brace Style&quot;), followed by the\nindented code, and a line closing the function with a curly bracket:": "Nas classes, funções, loops e controlo de fluxo o primeiro parantisis está no fim da primeira linha (\"One True Brace Style\"), seguido pelo código identado, e uma linha a fechar a função com a chaveta de fecho:",
    "On conditionals and loops, always use braces even if there's only one line of code:": "Em ciclos condicionais, mesmo que apenas contenham uma linha de código, usa sempre chavetas.",
    "Cuddled else and else if:": "Deves \"aninhar\" as condicionais else e else if ao mesmo nível",
    "If you are checking the same variable more than twice, use switch/case instead of multiple else/if:": "Se validares a mesma variável mais do que duas vezes, usa o \"switch/case\" em vez de múltiplos \"else/if\"",
    "Classes and files": "Classes e ficheiros",
    "Only having one class per file is recommended.": "É recomendado ter apenas uma classe por ficheiro.",
    "All files have the same name of the class in them.": "Todos os ficheiros têm o mesmo nome da classe que contêm.",
    "Separate code into classes for easier extensibility.": "Separar o código em classes para ser fácil acrescentar código novo.",
    "Comments": "Comentários",
    "Comments are either on the same line as the code or in a special line.": "Os comentários ou estão na mesma linha que o código ou numa linha especial.",
    "Comments are indented alongside the code, and obvious comments do more harm\nthan good.": "Os comentários são escritos juntamente com o código e os comentários não óbvios são os que mais ajudam a entender o código.",
    "Variable names, class names, function names": "Nomes das variáveis, classes e funções",
    "Also worth referring that there should be no Hungarian notation, and no mix of\nany kinds of notations.": "É também importante referir que não deve haver notação Húngara, nem misturas de nenhumas notações.",
    "Casting": "Casting",
    "Avoid using <code>as</code> keyword when casting as it might give <code>null</code> as result, which could be easily forgotten to check.": "Evita usar a keyword <code>as</code> quando fazes o casting pois poderá devolver um <code>null</code> como resultado, cuja verificação pode ser facilmente esquecida.",
    "Vala namespaces": "Namespaces de Vala",
    "Referring to GLib is not necessary. If you want to print something:": "Não precisas de fazer referência ao GLib. Se pretendes imprimir algo:",
    "Opt for the second one, it's much cleaner.": "Opta pela segunda, é muito mais limpa.",
    "Columns per line": "Colunas por linha",
    "Ideally, lines should have no more than 80 characters per line, because this\nis the default terminal size. However, as an exception, more characters could\nbe added, because most people have wide-enough monitors nowadays. The hard\nlimit is 120 characters.": "Idealmente, as linhas de código não devem ter mais de 80 caracteres, porque este é o tamanho padrão do terminal. No entanto, como excepção, mais caracteres podem ser adicionados, porque a maioria das pessoas tem monitores largos o suficiente. O tamanho máximo é 120 caracteres.",
    "GPL Header": "Cabeçalho GPL",
    "Reporting Bugs": "Reportar erros",
    "One of the big advantages of being an openly developed project is being able to take part in public bug tracking. However, if you're new to working with public bug tracking, it can be difficult to understand how to report bugs The Right Way™. So let's find out how:": "Uma das grandes vantagens de fazer parte de um projeto de software aberto é a possibilidade de participar em tarefas públicas de correcção de bugs. Ainda assim, sendo algo novo para ti, é bom indicar de como reportar os bugs de forma correta™. Vamos saber como:",
    "In order to file reports, you must be signed up as a member of Launchpad. If you've been through our <a href=\"/docs/code/getting-started#the-basic-setup\">development guide</a>, you already have this covered.": "Para inserires um report, tens que criar conta no Launchpad. Se leste o nosso <a href=\"/docs/code/the-basic-setup\">guia de desenvolvimento</a>, já realizaste este passo.",
    "Find the &quot;Report a Bug&quot; page for the app in question. Often times you can right-click the app in the dock, select &quot;About&quot;, and then select &quot;Report a Problem&quot;. Otherwise, you can search for the app on Launchpad, select the &quot;Bugs&quot; tab, and then &quot;Report a Bug&quot; on the right side of the page.": "Encontra a página para reportares bugs para a app em questão. Muitas vezes podes clicar com o botão da direita do rato no icone na Doca, seleccionar \"Sobre\" e depois seleccionar \"Reportar um problema\". De outra forma podes procurar a app no Launchpad, seleccionar o separador de \"Bugs\" e depois \"Report a Bug\" no lado direito da página.",
    "When filing a new report, launchpad will automatically check for duplicates. However, it's still a good idea to search the bug list to make sure your report hasn't been filed already. If your report has already been filed by someone else, you can mark the report as affecting you using the link on the top left of the report's page. Only comment on the report if you can provide additional useful information that may help track down the source of the issue. Do not comment things like, &quot;I have this problem too&quot; or &quot;This is a really important issue&quot;.": "Quando submetes um novo report de erro, o Launchpad vai verificar que não existe duplicação. Ainda assim, é uma boa ideia pesquisares primeiro na lista de bugs para te certificares que este ainda não foi reportado. Se o teu bug já foi reportado por alguém, podes marcar este reporte como te afectando também, usando o link no canto superior esquerdo do report. Comenta apenas no report se conseguires adicionar informação útil que possa ajudar a despistar a fonte do problema. Não comentes coisas como \"Eu também sofro disto\" ou \"isto é realmente importante\".",
    "If your report has not already been filed by someone else and you've reached the &quot;Report a Bug&quot; page, type in a summary and description of the issue and select &quot;Submit&quot;. Keep in mind the following information while filing your report:": "Se o teu bug ainda não foi reportado por ninguém, e chegaste à página do \"Report a Bug\", escreve um sumário e um descritivo e selecciona \"Submit\". Mantém estas regras presentes quando o fizeres:",
    "Be Specific In The Summary": "Sê específico no sumário",
    "This will be the title of the issue in the bug tracker. It's very important to be specific because it makes it much easier for a developer or bug manager to search the issue list and helps avoid duplicate reports. A summary such as &quot;App Crashes&quot; is not good and vague requests like &quot;Increase Performance&quot; are not helpful. A good summary is something like &quot;Notification is not sent when process finishes&quot;.": "Isto funcionará como título na lista de bugs. É muito importante seres específico porque ajuda o developer a encontrar e prioritizar o bug, e as outras pessoas a não duplicar problemas. Um sumário como \"A APP Crasha\" não é nada bom, tal como pedidos vagos de \"aumenta a performance\" que em nada ajudam. Um bom sumário é por exemplo \"A notificação não é enviada quando o processo acaba\".",
    "Avoid Subjective or Ambiguous Adjectives": "Evita o subjectivo ou adjectivos ambíguos",
    "This may sound like a repeat of the first heading, but it's important when you want someone to confirm your report. Don't say that something is &quot;jarring&quot; or &quot;unintuitive&quot;. Instead describe what happened and contrast it with what you expected to happen. &quot;The panel suddenly appeared instead of being animated in,&quot; describes the problem in a way that is actionable and objective.": "Isto pode-te parecer repetição do que dissemos acima, mas é importante quando queres que alguém confirme o teu report. Não digas que algo está \"estranho\" ou \"pouco intuitivo\". Em vez disso descreve o que aconteceu e indica o que esperavas que acontecesse. \"O painel apareceu subitamente em vez de entrar com uma animação\" descreve o problema de uma forma objectiva e facilmente identificável.",
    "Be Concise, But Explain The Issue": "Sê conciso, mas explica o problema",
    "First of all, it's important to mention that bug reports should be written in English and you should, if possible, watch out for your language and grammar.": "Em primeiro lugar, é importante referir que os bug reports devem estar em inglês, e se possível, deves escrever com atenção a linguagem e gramática.",
    "The most important thing for a report is that the developer must be able to reproduce the issue. If necessary, include exact numbered steps to reproduce the issue. Include relevant information like your OS version, any modifications you've made to the system (like changing your window manager or kernel), or the version numbers of relevant libraries like Gtk or WebKit. If you're reporting a crash, make sure to <a href=\"https://wiki.debian.org/HowToGetABacktrace\">include a backtrace</a>.": "A coisa mais importante de um report é que o developer seja capaz de reproduzir o problema. Se necessário escreve na forma de um passo-a-passo indicando o exato número de passos até chegares ao erro. Inclui também informação relevante como a tua versão do sistema operativo, modificações que lhe tenhas feito (como teres mudado o gestor de janelas, ou o kernel), ou a versão das bibliotecas relevantes instaladas, como o Gtk ou WebKit. Se estás a reportar um crash, certifica-te que incluis um <a href=\"https://wiki.debian.org/HowToGetABacktrace\"> backtrace</a>.",
    "Be Prepared To Provide More Information": "Está preparado para fornecer mais informações",
    "If your report does not contain enough information for the developer to reproduce the issue, it may be marked as &quot;Incomplete&quot;. Oftentimes, a developer will make a comment requesting additional specific information. If you do not provide that information, your report will eventually expire.": "Se o teu report não contém informação suficiente para o developer reproduzir o erro, poderá ficar marcado como incompleto. Muitas vezes o developer faz um comentário a pedir mais informação específica. Se não forneceres esta informação o report pode acabar por expirar.",
    "If you've reported your issue against the wrong app, a developer may mark it as &quot;Invalid&quot;. If the developer knows which app you meant to report against, they may re-assign the issue. However, if they do not you must find the correct app and re-assign the report yourself.": "Se apresentaste o teu report na app errada, o developer pode marcar o report como \"inválido\". Se o developer conhecer a app que tu pretendias reportar, pode re-atribuir o report a essa app. Se não o fizer, cabe-te a ti encontrar a app correcta e re-assignar o report por ti próprio.",
    "If you're reporting a &quot;Wishlist&quot; issue, like a feature request, a developer may mark your bug as &quot;Opinion&quot; or &quot;Won't Fix&quot;. Developers are often open to discussion about these kinds of issues, but please do not harass a developer for marking your report this way.": "Se estás a reportar uma lista de desejos, como um pedido de uma funcionalidade inexistente, o developer pode marcar o teu report como uma \"opinião\" ou um \"sem arranjo\". Os developers estão abertos a discutir estes temas, mas por favor não os aterrorizes submetendo reports destes. Usa outros meios para o fazer.",
    "You Can Get a Bit of Help": "Podes sempre obter ajuda",
    "If you're not sure about anything above, you are always welcome to our development IRC channel: #elementary-dev on irc.freenode.net. We might be able to help you track down the actual project where you should report the issue, or perhaps even aid you with any English language issue you might come across. Most developers want to help you make good bug reports.": "Se ainda tens dúvidas sobre estas dicas, serás sempre bem vindo ao nosso canal de IRC dos developers: #elementary-dev no irc.freenode.net. podemos ajudar-te a encontrar o projeto correto para o teu report, ou ajudar-te a explicar o bug encontrado em inglês correto. A maioria dos developers vai-te ajudar a fazer um bom report.",
    "Don't Confirm Reports for Other People's Apps": "Não confirmes reports das apps de outras pessoas.",
    "If a report affects you, mark it using the link. Do not confrim your own reports. Even if you are 100% sure that you are right, just don't do it. It's not good bug tracker etiquette. A bug manager or developer for the app will confirm the report when they are able to review it.": "Se um bug reportado também te afeta, marca-o usando o link: Não confirmes os teus proprios reports. Mesmo que estejas 100% seguro que estás correto, não o faças. Não faz parte das regras de etiqueta. O responsável pela gestão dos bugs ou um programador vai confirmar o report quando tiver hipótese de o rever.",
    "Don't Make &quot;Me Too&quot; Comments": "Não faças comentários \"Eu também!\"",
    "We mentioned this earlier, but it's worth mentioning again. Do not make comments that simply say &quot;This issue affects me as well&quot;. This clutters up the tracker. Only comment if you are providing additional information that helps find the source of the issue. If you only want to let a developer know that you are affected, use the green link that says, &quot;Does this bug affect you?&quot; under the report's title.": "Já mencionámos isto, mas é sempre bom recordar. Não faças comentários a indicar apenas \"isto também me afeta\". Isto adiciona lixo à discussão. Comenta apenas quando tiveres inputs válidos adicionais que ajudem a descobrir a raiz do problema. Se apenas queres informar que um bug te afeta, usa o link que tem a pergunta \"Does this bug affect you?\" presente abaixo do título do report.",
    "Proposing Design Changes": "Propor Alterações de Design",
    "elementary has always been known for its strong focus on great design, but if you’re an up and coming designer you might not know how to get developers to pay attention to you. This reference guide is about how to effectively propose a design change in a way that makes it more likely for your design to become implemented.": "O elementary sempre foi conhecido pelo seu focus no design, mas se tu és um designer iniciante, poderá ser-te difícil conseguir a atenção dos developers. Este guia vai permitir-te propor alterações de design de forma eficiente, para teres mais probabilidade de veres o teu design implementado.",
    "Don't Make Demands": "Não exijas",
    "Let’s say you spent the last few hours re-designing the Search Engine Manager dialog in Midori and you want to bring this work to the attention of Midori’s developers. You could file a bug report something like “Search engine popup sucks” and paste your mockup and be done. But that approach isn’t going to win you any friends and your report will probably be marked “opinion” or “invalid”. Instead, we should consider the amount of work it will take to implement the new design and try to present it in a way that gets developers excited about the overall vision without demanding 1,000 lines of code in one shot.": "Vamos imaginar que passaste as útlimas horas a redesenhar a caixa de diálogo do gestor do motor de busca no Midori, e que pretendes chamar a atenção dos seus developers para a tua propsota. Podes enviar um report de erro com \"o popup da caixa de pesquisa é péssimo\" e colares o teu mockup... e está feito. Mas esta aproximação não te vai grangear muitos amigos, e o teu report será provavelmente marcado como \"opinião\" ou \"Inválido\". Em vez disso, devemos considerar a quantidade de trabalho que será para implementar o novo design, e tentar apresentar a alteração de uma forma que deixe os developers excitados sobre a tua visão, sem exigir a partida mais 1000 linhas de código de uma vez. ",
    "Use Blueprints": "Usa as Blueprints",
    "Firstly, we want to present the overall vision of our grand new design. So we should file a new blueprint (in this example, we’d file it <a href=\"http://blueprints.launchpad.net/midori\">here</a>). Name it something explicit and try to avoid titles that marginalize developer’s existing work. Something like “search-engine-manager-redesign” works just fine. In this blueprint we want to describe our motivations for the redesign. What are the problems with the current design and what does our new design aim to solve? Common reasons for a redesign can include minimizing window chrome, taking advantage of new toolkit elements, making the UI more consistent with other apps, etc. This is also a good place to link to that mockup we were talking about earlier. If your design is really involved, you can even link to an external specification (Google Docs work great for getting feedback) where you have a chance to really get into the nitty gritty of your idea.": "Inicialmente, queremos apresentar a visão geral do nosso novo desgin. Para isso submetemos uma nova blueprint (neste exemplo do Midori, seria submetida <a href=\"http://blueprints.launchpad.net/midori\">aqui</a>). Dá-lhe um nome explicito e tenta evitar títulos que marginalizem o trabalho dos developers.  Algo como \"search-engine-manager-redesign\" é um bom exemplo. Neste blueprint queremos descrever as nossas motivações para o redesign. Quais foram os problemas com o design actual e como é que o teu design os resolve? AS razões mais comuns para um redesign podem incluir livrar a interface de bling desnecessário, usar novas ferramentas disponíveis tornando a sua UI mais consistente com as outras apps, etc. Aqui é também um bom lugar para linkares o tal mockup que fizeste. Se queres que o teu design seja bem justificado podes por exemplo linkar uma especificação externa (por exemplo no google Docs) onde poderás justificar o mesmo com o nível máximo de detalhe.",
    "Create Concise Work Items": "Cria items de trabalho concisos",
    "Now that you’ve laid out the motivations for your design and explained the overall vision, you should break it up into small, actionable work items (also called bug reports). To continue our example, I would have reports like “Change Search Engine Manager Dialog to Popover”, “Re-order Search Engines with Drag and Drop”, “Open Search Engine Manager by clicking Search icon in URL Bar”, “Show edit and remove buttons next to engine in Search Engine Manager”, etc etc. Each bug report should describe just one small change. We do this for several reasons:": "Agora que explicaste as tuas motivações e explicaste a tua visão geral para o trabalho, deves partir a mesma em pequenas acções executáveis por alguém (também chamadas de bug reports). Para continuar o exemplo, terias que criar reports do tipo “Change Search Engine Manager Dialog to Popover”, “Re-order Search Engines with Drag and Drop”, “Open Search Engine Manager by clicking Search icon in URL Bar”, “Show edit and remove buttons next to engine in Search Engine Manager”, etc etc. Cada bug deve conter apenas uma pequena acção, isto por múltiplas razões:",
    "It allows developers to deny one request without denying all of them. Face it: your design isn’t perfect and it’s very possible that a developer isn’t going to like part of it. By breaking up your design into little pieces, it allows a developer to incorporate the changes they like and ignore the ones they don’t.": "Permite aos developers seleccionarem apenas alguns dos pedidos, sem recusarem todos os pedidos de uma vez. Admite: o teu design não é perfeito, e é bem possível que o developer não goste dele na totalidade. Ao partires o design em pequenas peças, permites ao developer incorporar aquilo que concorda e ignorar o que não concorda.",
    "It makes your design less intimidating. A big redesign means lots of lines of code. If your changes look like too much of a hassle, you’re going to have a hard time getting a developer to work on them. But if you present small changes that can be incorporated a bit at a time, there’s a bigger chance that your whole design will eventually be implemented.": "Torna a mudança menos intimidante. Um grande redesign siginifica muitas linhas de código. Se as tuas alterações forem vistas como tendo um grande impacot, vai ser difícil convenceres um developer a trabalhá-las. Mas se apresentas pequenas alterações que podem ser incorporadas aos poucos, existe uma maior hipótese de todo o teu design ser implementado.",
    "It allows developers to track their progress. Once again, big designs take time to implement. Even if a developer wants to implement the whole thing right away, they might not be able to. Giving them a way to “check off” pieces as they go makes it more likely that a part of your design won’t be forgotten about when it’s translated into code.": "Permite aos developers acompanharem o desenvolvimento. Mais uma vez grandes redesigns levam muito tempo a implementar. Mesmo que um grande developer queira implementar tudo rapidamente, pode não conseguir. Assim dás uma hipótese dele ir \"checkando\" as partes que vão sendo concluídas, e ajuda a validar que uma parte do teu design não fica esquecida.",
    "File Compelling Reports": "Envia Reportes de Erro completos",
    "Don’t forget to make your reports compelling. It’s up to you to sell the merits of each change. Cite the HIG, prior-art, user complaints, articles by other designers, and present your changes in a logical, non-opinionated, and concise manner. It also doesn’t hurt to speak in developer terms. Brush up on the names of widgets in Gtk and Granite, get familiar with available libraries like Zeitgeist and Unity, and don’t forget about system components like PulseAudio or Contractor. Also, whatever you do, don’t be presumptuous and confirm your own bug reports. You wouldn’t ask a friend for a favor and then answer yourself for them, so don’t do it here either. See <a href=\"#reporting-bugs\">the above section</a> for a refresher on filing good bug reports.": "Não te esqueças de fazer reports interessantes. Cabe-te a ti vender os méritos de cada alteração. Cita o HIG, artes, queixas de utilziadores, artigos de outros designers, e apresenta as alterações de uma forma lógica, não opinativa, e concisa. Também ajuda se usares os termos mais técnicos. Recorda o nome das ferramentas presentes no GTK e no Granite, familiariza-te com as bibliotecas disponíveis como a Zeitegeist e a Unity, e não te esqueças dos componentes do sistema como o PulseAudio ou Contractor. Da mesma forma, não sejas presunçoso e confirmes os teus próprios reports. Não pedes um favor a um amigo, para depois responderes por ele! Vê a secção <a href=\"#reporting-bugs\">anterior</a> para refrescares as regras base de submissão de reportes de erro.",
    "Be Prepared to Iterate": "Prepara-te para a interatividade do processo",
    "Don’t be upset if a developer plainly states that they don’t want to implement your idea. Remember that they have plans too. You might have to go back to the drawing board a bit. Listen to their feedback. Your design might be a little over-engineered, it might conflict with other designs being worked on, or maybe it’s just in conflict with the goals and scope of the app. Remember that you’re in the position of requesting someone to devote their time to something. You’re asking for a favor. Don’t be afraid to argue a position within polite reason, but remember to stay humble.": "Não te irrirtes se um developer indicar logo que não quer implementar a tua ideia. Lembra-te que eles próprios têm planos para a app. Poderás ter que voltar à mesa de desenho novamente. Ouve o seu feedback. O teu design pode ser demasiado ambicioso, pode entrar em conflito com outros designs já em implementação, ou poderá apenas colidir com os objectivos gerais da app. Lembra-te que estás na posição de PEDIR a alguém que dedique o seu tempo a algo. És quem está a pedir um favor. Não tenhas receio de discutir a tua posição, mas sempre dentro das regras de boa educação... lembra-te, sê humilde. "
}